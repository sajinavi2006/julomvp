# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-11-06 09:19
from __future__ import unicode_literals

from django.db import migrations
from django.conf import settings

from juloserver.julo_financing.models import (
    JFinancingProduct,
    JFinancingProductSaleTag,
    JFinancingProductSaleTagDetail,
)

BUCKET_URL = settings.STATIC_ALICLOUD_BUCKET_URL + 'jfinancing/tag_logos/'
free_insurance_tag_name = 'free_insurance'
best_seller_tag_name = 'best_seller'
free_data_package_tag_name = 'free_data_package'


def create_julo_financing_sale_tags(app, schema_editor):
    tags = [
        {
            'tag_name': free_insurance_tag_name,
            'tag_img_url': BUCKET_URL + free_insurance_tag_name + '.png',
        },
        {
            'tag_name': best_seller_tag_name,
            'tag_img_url': BUCKET_URL + best_seller_tag_name + '.png',
        },
        {
            'tag_name': free_data_package_tag_name,
            'tag_img_url': BUCKET_URL + free_data_package_tag_name + '.png',
        },
    ]
    to_created_tags = []
    for tag in tags:
        tag_obj = JFinancingProductSaleTag(
            tag_name=tag['tag_name'],
            tag_image_url=tag['tag_img_url'],
            is_active=True,
        )
        to_created_tags.append(tag_obj)

    JFinancingProductSaleTag.objects.bulk_create(to_created_tags)


def set_sale_tags_to_all_products(app, schema_editor):
    all_product_ids = JFinancingProduct.objects.filter(is_active=True).values_list('id', flat=True)
    all_tags = JFinancingProductSaleTag.objects.filter(is_active=True)

    product_tag_details = []
    for product_id in all_product_ids:
        for tag in all_tags:
            # set primary for best seller tag
            primary = False
            if tag.tag_name == best_seller_tag_name:
                primary = True

            tag_detail = JFinancingProductSaleTagDetail(
                jfinancing_product_id=product_id,
                jfinancing_product_sale_tag_id=tag.id,
                primary=primary,
            )
            product_tag_details.append(tag_detail)

    JFinancingProductSaleTagDetail.objects.bulk_create(product_tag_details)


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(
            code=create_julo_financing_sale_tags,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.RunPython(
            code=set_sale_tags_to_all_products,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
