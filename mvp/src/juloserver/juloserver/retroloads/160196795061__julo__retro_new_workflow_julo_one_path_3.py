# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-09-22 09:24
from __future__ import unicode_literals

from builtins import range
from django.db import migrations

from juloserver.julo.models import Workflow, WorkflowStatusPath, ProductProfile
from juloserver.julo.models import ProductLine, ProductLineLoanPurpose


def add_workflow_julo_one(apps, _schema_editor):

    workflow = Workflow.objects.get(
        name="JuloOneWorkflow"
    )
    # WorkflowStatusPath
    WorkflowStatusPath.objects.get_or_create(
        status_previous=1311,
        status_next=121,
        type="happy",
        workflow=workflow
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=1311,
        status_next=124,
        type="happy",
        workflow=workflow
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=1311,
        status_next=122,
        type="happy",
        workflow=workflow
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=1311,
        status_next=130,
        type="happy",
        workflow=workflow
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=1311,
        status_next=131,
        type="happy",
        workflow=workflow
    )
    WorkflowStatusPath.objects.get(
        status_previous=131,
        status_next=141,
        workflow=workflow
    ).delete()

    WorkflowStatusPath.objects.get_or_create(
        status_previous=122,
        status_next=139,
        type="graveyard",
        workflow=workflow
    )
    j1_product_profile = ProductProfile.objects.create(
        code=1,
        name='J1',
        min_amount=300000,
        max_amount=8000000,
        min_duration=2,
        max_duration=9,
        min_interest_rate=0.03,
        max_interest_rate=0.08,
        interest_rate_increment=0.01,
        payment_frequency='Monthly',
        min_origination_fee=0.05,
        max_origination_fee=0.07,
        origination_fee_increment=0,
        late_fee=0,
        cashback_initial=0.01,
        cashback_payment=0.01,
        is_active=True,
        debt_income_ratio=0.3,
        is_product_exclusive=False,
        is_initial=True,
    )

    julo1_product_line = ProductLine.objects.get(product_line_code=1)
    julo1_product_line.product_line_type = 'J1'
    julo1_product_line.min_amount = 0
    julo1_product_line.max_amount = 0
    julo1_product_line.min_duration = 2
    julo1_product_line.max_duration = 12
    julo1_product_line.min_interest_rate = 0.36
    julo1_product_line.max_interest_rate = 0.96
    julo1_product_line.payment_frequency = 'Monthly'
    julo1_product_line.product_profile = j1_product_profile
    julo1_product_line.save()

    for loan_purpose_id in range(1, 11):
        ProductLineLoanPurpose.objects.create(
            product_line_id=julo1_product_line.product_line_code,
            loan_purpose_id=loan_purpose_id
        )

    path_data = (
        [120, 131, 'detour'],
        [120, 125, 'happy'],
        [120, 121, 'happy'],
        [121, 137, 'graveyard'],
        [121, 135, 'graveyard'],
        [121, 133, 'graveyard'],
        [121, 134, 'detour'],
        [121, 131, 'detour'],
        [122, 137, 'graveyard'],
        [122, 135, 'graveyard'],
        [122, 133, 'graveyard'],
        [122, 134, 'detour'],
        [122, 138, 'detour'],
        [124, 139, 'graveyard'],
        [124, 137, 'graveyard'],
        [124, 135, 'graveyard'],
        [124, 133, 'graveyard'],
        [124, 134, 'detour'],
        [124, 126, 'happy'],
        [124, 130, 'happy'],
        [131, 121, 'happy'],
        [131, 124, 'happy'],
        [131, 122, 'happy'],
        [131, 132, 'happy'],
        [131, 1311, 'detour'],
        [131, 134, 'detour'],
        [131, 139, 'graveyard'],
        [131, 137, 'graveyard'],
        [131, 136, 'graveyard'],
        [131, 135, 'graveyard'],
        [131, 133, 'graveyard'],
        [138, 139, 'graveyard'],
        [138, 137, 'graveyard'],
        [138, 136, 'graveyard'],
        [138, 135, 'graveyard'],
        [138, 133, 'graveyard'],
        [138, 134, 'detour'],
        [138, 123, 'happy'],
        [138, 124, 'happy'],
        [1311, 131, 'detour'],
        [1311, 130, 'happy'],
        [1311, 122, 'happy'],
        [1311, 124, 'happy'],
        [1311, 121, 'happy'],
    )

    for old_status, new_status, path_type in path_data:
        WorkflowStatusPath.objects.filter(
            status_previous=old_status,
            status_next=new_status,
            workflow=workflow).update(type=path_type)

class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(add_workflow_julo_one, migrations.RunPython.noop),
    ]
