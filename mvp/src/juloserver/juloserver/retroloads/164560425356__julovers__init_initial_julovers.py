# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2022-01-10 03:30
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.constants import WorkflowConst

from juloserver.julo.models import (
    ProductLookup,
    ProductProfile,
    ProductLine,
    Workflow,
    WorkflowStatusNode,
    WorkflowStatusPath,
)
from juloserver.julo.product_lines import ProductLineCodes

def init_julovers(apps, schema_editor):
    # workflow
    workflow, _ = Workflow.objects.get_or_create(
        name=WorkflowConst.JULOVER,
        desc="this is a workflow for Julovers (Julo Employee's special J1 Applications)",
        is_active=True,
        handler="JuloverWorkflowHandler",
    )

    # workflow status path
    # 0->105, 105->141, 105->130, 130->190:
    WorkflowStatusPath.objects.get_or_create(
        status_previous=0,
        status_next=105,
        type="happy",
        workflow=workflow,
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=105,
        status_next=130,
        type="happy",
        workflow=workflow,
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=105,
        status_next=141,
        type="unhappy",
        workflow=workflow,
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=130,
        status_next=190,
        type="happy",
        workflow=workflow,
    )
    WorkflowStatusPath.objects.get_or_create(
        status_previous=141,
        status_next=130,
        type="unhappy",
        workflow=workflow,
    )
    # workflow status node
    WorkflowStatusNode.objects.get_or_create(
        status_node=141,
        handler='Julover141Handler',
        workflow=workflow,
    )
    WorkflowStatusNode.objects.get_or_create(
        status_node=105,
        handler='Julover105Handler',
        workflow=workflow,
    )
    WorkflowStatusNode.objects.get_or_create(
        status_node=130,
        handler='Julover130Handler',
        workflow=workflow,
    )
    WorkflowStatusNode.objects.get_or_create(
        status_node=190,
        handler='Julover190Handler',
        workflow=workflow,
    )

    # product profile
    product_profile, _ = ProductProfile.objects.get_or_create(
        code=ProductLineCodes.JULOVER,
        name='JULOVER',
        min_amount=300000,
        max_amount=20000000,
        min_duration=1,
        max_duration=4,
        min_interest_rate=0,
        max_interest_rate=0,
        interest_rate_increment=0,
        payment_frequency='Monthly',
        min_origination_fee=0,
        max_origination_fee=0,
        origination_fee_increment=0,
        late_fee=0,
        cashback_initial=0,
        cashback_payment=0,
        is_active=True,
        debt_income_ratio=0,
        is_product_exclusive=True,
        is_initial=True,
    )
    # product line
    product_line, _ = ProductLine.objects.get_or_create(
        product_line_code=ProductLineCodes.JULOVER,
        product_line_type='JULOVER',
        min_amount=300000,
        max_amount=20000000,
        min_duration=1,
        max_duration=4,
        min_interest_rate=0,
        max_interest_rate=0,
        payment_frequency='Monthly',
        product_profile=product_profile,
        default_workflow=workflow,
    )

    # product look-up
    ProductLookup.objects.get_or_create(
        product_name='I.000-O.000-L.000-C1.000-C2.000-M',
        interest_rate=0,
        origination_fee_pct=0,
        late_fee_pct=0,
        cashback_initial_pct=0,
        cashback_payment_pct=0,
        product_line=product_line,
        product_profile=product_profile,
        is_active=True,
        admin_fee=0,
    )



class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(init_julovers, migrations.RunPython.noop),
    ]
