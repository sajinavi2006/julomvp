# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-07-04 03:55
from __future__ import unicode_literals

from django.db import migrations

from juloserver.partnership.models import PartnershipProductLookup
from juloserver.julo.models import Partner, ProductLookup

from juloserver.julo.product_lines import ProductLineCodes


def populate_partnership_product_lookup(apps, schema_editor):
    partnership_product_lookups = []
    partner_per_product_line = dict()
    product_lines = ProductLineCodes.manual_process() + [ProductLineCodes.RABANDO]
    product_lines.remove(ProductLineCodes.BUKUWARUNG)

    partners = Partner.objects.filter(product_line__in=product_lines)

    for partner in partners:
        partner_per_product_line[partner.product_line] = partner.id

    product_lookups = ProductLookup.objects.filter(
        product_line__in=product_lines, is_active=True
    ).select_related("product_profile")

    for pl in product_lookups:
        partnership_product_lookups.append(
            PartnershipProductLookup(
                id=pl.product_code,
                product_name=pl.product_name,
                interest_rate=pl.interest_rate,
                origination_fee_pct=pl.origination_fee_pct,
                late_fee_pct=pl.late_fee_pct,
                cashback_initial_pct=pl.cashback_initial_pct,
                cashback_payment_pct=pl.cashback_payment_pct,
                product_line_id=ProductLineCodes.MERCHANT_FINANCING_STANDARD_PRODUCT,
                product_profile_id=pl.product_profile.id,
                partner_id=partner_per_product_line.get(pl.product_line),
                eligible_amount=pl.eligible_amount,
                eligible_duration=pl.eligible_duration,
                is_active=pl.is_active,
                admin_fee=pl.admin_fee,
            )
        )

    PartnershipProductLookup.objects.bulk_create(partnership_product_lookups)


class Migration(migrations.Migration):
    operations = [
        migrations.RunPython(populate_partnership_product_lookup, migrations.RunPython.noop),
    ]
