# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-06-16 06:55
from __future__ import unicode_literals
from datetime import datetime, time
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils import timezone


from juloserver.cootek.models import CootekConfiguration



from juloserver.julo.models import CootekRobocall



def retro_cootek_data_for_task_type(apps, _schema_editor):
    today = timezone.localtime(timezone.now())
    today_min = datetime.combine(today, time.min)
    today_max = datetime.combine(today, time.max)
    
    
    cootek_robocall_data = CootekRobocall.objects.filter(cdate__range=(today_min, today_max))

    cootek_config = CootekConfiguration.objects.all() \
        .distinct('called_at').values('called_at', 'task_type', 'time_to_start')
    cootek_config_map = {}
    for called_at, task_type, time_to_start in cootek_config:
        cootek_config_map.update({called_at: [task_type, time_to_start]})

    for record in cootek_robocall_data:
        task_type, time_to_start = cootek_config_map.get(record.called_at)
        if task_type and time_to_start:
            record.update_safely(task_type=task_type, time_to_start=time_to_start)


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(retro_cootek_data_for_task_type)
    ]
