# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-12-08 04:52
from __future__ import unicode_literals

from django.db import migrations

from juloserver.application_flow.constants import PartnerNameConstant
from juloserver.julo.models import Partner
from juloserver.partnership.constants import PartnershipProductFlow, AgentAssistedEmailFlowConfig
from juloserver.partnership.models import PartnershipFlowFlag


def update_cermati_agent_assisted_email_flow_config(apps, _schema_editor):
    partner = Partner.objects.filter(name=PartnerNameConstant.CERMATI).last()
    if partner:
        partnership_flow_flag, _ = PartnershipFlowFlag.objects.get_or_create(
            partner=partner,
            name=PartnershipProductFlow.AGENT_ASSISTED
        )

        partnership_flow_flag.configs.update(
            {
                AgentAssistedEmailFlowConfig.APPROVED_AGENT_ASSISTED_EMAIL: {
                    "with_create_pin": True,
                    "without_create_pin": True
                },
                AgentAssistedEmailFlowConfig.REJECT_AGENT_ASSISTED_EMAIL: {
                    "with_create_pin": True,
                    "without_create_pin": True
                },
                AgentAssistedEmailFlowConfig.FORM_SUBMITTED_AGENT_ASSISTED_EMAIL: {
                    "with_create_pin": True,
                    "without_create_pin": True
                },
                AgentAssistedEmailFlowConfig.REJECT_C_SCORE_AGENT_ASSISTED_EMAIL: {
                    "with_create_pin": True,
                    "without_create_pin": True
                },
            }
        )

        partnership_flow_flag.save()


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(update_cermati_agent_assisted_email_flow_config, migrations.RunPython.noop),
    ]
