# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-03-03 03:57
from __future__ import unicode_literals

from django.db import migrations

from juloserver.julo.models import (
    StatusLookup,
    Workflow,
    WorkflowStatusPath,
)
from juloserver.julo.statuses import (
    ApplicationStatusCodes,
    JuloOneCodes,
)


def add_application_workflow_status_path(*args):
    """
    The status list is based on this query in the production.
    select distinct(status_next_code)
    From ops.workflow_status_path
    where
        workflow_id = 7
        and is_active=True
        and status_next_code not in (0, 100, 105, 115, 106, 133, 190)
    """
    status_codes = (
        120, 121, 122, 123, 124, 125, 126,
        130, 131, 1311, 132, 134, 135, 136, 137, 138, 139,
        140, 141, 142, 144, 145, 147,
        150,
        175,
    )
    j1_workflow = Workflow.objects.get(name='JuloOneWorkflow')
    StatusLookup.objects.get_or_create(
        status_code=ApplicationStatusCodes.APPLICATION_FLAGGED_FOR_FRAUD_SUSPICIOUS,
        status="Application flagged for fraud suspicious",
    )
    for status_code in status_codes:
        WorkflowStatusPath.objects.get_or_create(
            status_previous=status_code,
            status_next=ApplicationStatusCodes.APPLICATION_FLAGGED_FOR_FRAUD_SUSPICIOUS,
            workflow=j1_workflow,
            defaults={
                'is_active': True,
                'type': 'detour',
            }
        )

        WorkflowStatusPath.objects.get_or_create(
            status_next=status_code,
            status_previous=ApplicationStatusCodes.APPLICATION_FLAGGED_FOR_FRAUD_SUSPICIOUS,
            workflow=j1_workflow,
            defaults={
                'is_active': True,
                'type': 'detour',
            }
        )

    # Add workflow status to x133
    for status_code in (ApplicationStatusCodes.APPLICATION_FLAGGED_FOR_FRAUD_SUSPICIOUS, 100):
        WorkflowStatusPath.objects.get_or_create(
            status_next=ApplicationStatusCodes.APPLICATION_FLAGGED_FOR_FRAUD,
            status_previous=status_code,
            workflow=j1_workflow,
            defaults={
                'is_active': True,
                'type': 'graveyard',
            }
        )


def add_new_account_status(*args):
    StatusLookup.objects.get_or_create(
        status_code=JuloOneCodes.FRAUD_SUSPICIOUS,
        status="Fraud Suspicious",
    )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(add_application_workflow_status_path, migrations.RunPython.noop),
        migrations.RunPython(add_new_account_status, migrations.RunPython.noop),
    ]
