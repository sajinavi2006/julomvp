# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2022-04-06 13:57
from __future__ import unicode_literals

from django.db import migrations, transaction
from juloserver.julo.models import Partner
from juloserver.api_token.models import ExpiryToken
from juloserver.api_token.authentication import make_never_expiry_token
from juloserver.partnership.models import PartnershipConfig, PartnershipType
from juloserver.partnership.constants import PartnershipTypeConstant
from juloserver.julo.services2 import encrypt
from django.contrib.auth.models import Group


def create_expiry_token_grab(apps, schema_editor):
    with transaction.atomic():
        partner = Partner.objects.filter(name="grab").last()
        user = partner.user
        ExpiryToken.objects.get_or_create(user=user)
        make_never_expiry_token(user)
        group = Group.objects.get(name="julo_partners")
        encrypter = encrypt()
        secret_key = encrypter.encode_string(str(user.auth_expiry_token))
        partner.token = secret_key
        partner.save()
        partnership_type = PartnershipType.objects.filter(
            partner_type_name=PartnershipTypeConstant.LEAD_GEN).last()

        partner_config = PartnershipConfig.objects.create(
            partner=partner,
            partnership_type=partnership_type,
            callback_url=None,
            callback_token=None,
        )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(create_expiry_token_grab, migrations.RunPython.noop),
    ]
