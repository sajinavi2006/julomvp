# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-06-10 08:28
from __future__ import unicode_literals
import csv
import io

from django.db import migrations

from juloserver.julo.models import SepulsaProduct
from juloserver.payment_point.models import AYCProduct


def fill_ayoconnect_product_table_data(apps, schema_editor):

    data = """cdate,udate,sepulsa_product_id,product_id,product_name,product_nominal,product_label,product_desc,type,category,partner_price,customer_price,is_active,mobile_operator_id,customer_price_regular,is_not_blocked,admin_fee,collection_fee,service_fee
    ,,,1103,GOPAY 20 RB,20.000,,,e-wallet,GoPay,21.500,23.100,TRUE,,21.500,TRUE,,,
    ,,,1172,GOPAY 25 RB,25.000,,,e-wallet,GoPay,26.500,28.600,TRUE,,26.500,TRUE,,,
    ,,,1173,GOPAY 50 RB,50.000,,,e-wallet,GoPay,51.500,56.100,TRUE,,51.500,TRUE,,,
    ,,,1174,GOPAY 75 RB,75.000,,,e-wallet,GoPay,76.500,83.600,TRUE,,76.500,TRUE,,,
    ,,,1175,GOPAY 100 RB,100.000,,,e-wallet,GoPay,101.500,111.100,TRUE,,101.500,TRUE,,,
    ,,,1176,GOPAY 150 RB,150.000,,,e-wallet,GoPay,151.500,166.100,TRUE,,151.500,TRUE,,,
    ,,,1177,GOPAY 200 RB,200.000,,,e-wallet,GoPay,201.500,221.100,TRUE,,201.500,TRUE,,,
    ,,,1178,GOPAY 250 RB,250.000,,,e-wallet,GoPay,251.500,276.100,TRUE,,251.500,TRUE,,,
    ,,,1179,GOPAY 500 RB,500.000,,,e-wallet,GoPay,501.500,551.100,TRUE,,501.500,TRUE,,,
    ,,,1180,GOPAY 1 juta,1.000.000,,,e-wallet,GoPay,1.001.500,1.101.100,TRUE,,1.001.500,TRUE,,,
    ,,,1105,OVO 20 RB,20.000,,,e-wallet,OVO,21.500,23.210,TRUE,,21.500,TRUE,,,
    ,,,1159,OVO 25 RB,25.000,,,e-wallet,OVO,26.500,28.710,TRUE,,26.500,TRUE,,,
    ,,,1160,OVO 40 RB,40.000,,,e-wallet,OVO,41.500,45.210,TRUE,,41.500,TRUE,,,
    ,,,1161,OVO 50 RB,50.000,,,e-wallet,OVO,51.500,56.210,TRUE,,51.500,TRUE,,,
    ,,,1162,OVO 100 RB,100.000,,,e-wallet,OVO,101.500,111.210,TRUE,,101.500,TRUE,,,
    ,,,1163,OVO 200 RB,200.000,,,e-wallet,OVO,201.500,221.210,TRUE,,201.500,TRUE,,,
    ,,,1927,OVO 250 RB,250.000,,,e-wallet,OVO,251.500,276.210,TRUE,,251.500,TRUE,,,
    ,,,1164,OVO 500 RB,500.000,,,e-wallet,OVO,501.500,551.210,TRUE,,501.500,TRUE,,,
    ,,,1165,OVO 1 juta,1.000.000,,,e-wallet,OVO,1.001.500,1.101.210,TRUE,,1.001.500,TRUE,,,
    ,,,2239,Saldo ShopeePay 20.000,20.000,,,e-wallet,ShopeePay,22.000,22.990,TRUE,,22.000,TRUE,,,
    ,,,2240,Saldo ShopeePay 30.000,30.000,,,e-wallet,ShopeePay,32.000,33.990,TRUE,,32.000,TRUE,,,
    ,,,2241,Saldo ShopeePay 40.000,40.000,,,e-wallet,ShopeePay,42.000,44.990,TRUE,,42.000,TRUE,,,
    ,,,2242,Saldo ShopeePay 50.000,50.000,,,e-wallet,ShopeePay,52.000,55.990,TRUE,,52.000,TRUE,,,
    ,,,2243,Saldo ShopeePay 60.000,60.000,,,e-wallet,ShopeePay,62.000,66.990,TRUE,,62.000,TRUE,,,
    ,,,2244,Saldo ShopeePay 70.000,70.000,,,e-wallet,ShopeePay,72.000,77.990,TRUE,,72.000,TRUE,,,
    ,,,2245,Saldo ShopeePay 80.000,80.000,,,e-wallet,ShopeePay,82.000,88.990,TRUE,,82.000,TRUE,,,
    ,,,2246,Saldo ShopeePay 90.000,90.000,,,e-wallet,ShopeePay,92.000,99.990,TRUE,,92.000,TRUE,,,
    ,,,2247,Saldo ShopeePay 100.000,100.000,,,e-wallet,ShopeePay,102.000,110.990,TRUE,,102.000,TRUE,,,
    ,,,2248,Saldo ShopeePay 200.000,200.000,,,e-wallet,ShopeePay,202.000,220.990,TRUE,,202.000,TRUE,,,
    ,,,2249,Saldo ShopeePay 300.000,300.000,,,e-wallet,ShopeePay,302.000,330.990,TRUE,,302.000,TRUE,,,
    ,,,2250,Saldo ShopeePay 400.000,400.000,,,e-wallet,ShopeePay,402.000,440.990,TRUE,,402.000,TRUE,,,
    ,,,2251,Saldo ShopeePay 500.000,500.000,,,e-wallet,ShopeePay,502.000,550.990,TRUE,,502.000,TRUE,,,"""

    # Use io.StringIO to simulate a file object based on the string data
    csv_file = io.StringIO(data)

    # Read the CSV data
    csv_reader = csv.DictReader(csv_file)

    # Initialize an empty list to store the dictionaries

    data = []
    for row in csv_reader:
        sepulsa_product = SepulsaProduct.objects.filter(product_name=row['product_name']).last()

        product = AYCProduct(
            sepulsa_product=sepulsa_product,
            product_id=str(row['product_id']),
            product_name=row['product_name'],
            product_nominal=row['product_nominal'].replace('.', ''),
            type=row['type'],
            category=row['category'],
            partner_price=row['partner_price'].replace('.', ''),
            customer_price=row['customer_price'].replace('.', ''),
            is_active=row['is_active'],
            customer_price_regular=row['customer_price_regular'].replace('.', ''),
        )
        data.append(product)

    AYCProduct.objects.bulk_create(data)


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(
            code=fill_ayoconnect_product_table_data,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
