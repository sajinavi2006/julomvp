# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-02-27 05:55
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.models import (
    WorkflowStatusPath,
    Workflow,
    ChangeReason,
    StatusLookup,
)


def remove_unused_workflow_status_jstarter(apps, schema_editor):
    """
    Remove some status_path for JStarter Workflow
    Remove x121 to x131
    Remove x121 to x136
    Remove x121 to x137

    Refer to this card:
    https://juloprojects.atlassian.net/browse/UND-557
    """

    # Check for existing JStarter Workflow
    jstarter_workflow = Workflow.objects.get_or_none(name="JuloStarterWorkflow")
    if jstarter_workflow:
        status_previous = 121

        # delete x131
        remove_x121_x131 = WorkflowStatusPath.objects.get_or_none(
            status_previous=status_previous,
            status_next=131,
            workflow=jstarter_workflow
        )
        if remove_x121_x131:
            remove_x121_x131.delete()

        # delete x136
        remove_x121_x136 = WorkflowStatusPath.objects.get_or_none(
            status_previous=status_previous,
            status_next=136,
            workflow=jstarter_workflow
        )
        if remove_x121_x136:
            remove_x121_x136.delete()

        # delete x137
        remove_x121_x137 = WorkflowStatusPath.objects.get_or_none(
            status_previous=status_previous,
            status_next=137,
            workflow=jstarter_workflow
        )
        if remove_x121_x137:
            remove_x121_x137.delete()


def new_change_reason_for_x135(apps, schema_editor):
    """
    To add new change reason for JStarter in status code x135

    Refer to this card:
    https://juloprojects.atlassian.net/browse/UND-557
    """

    status_code = 135
    new_reason = "failed dv julo starter go to j1"
    status_reject = StatusLookup.objects.get_or_none(status_code=status_code)
    if status_reject:
        is_exist = ChangeReason.objects.filter(status=status_reject, reason=new_reason).exists()
        if not is_exist:
            ChangeReason.objects.create(status=status_reject, reason=new_reason)


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(remove_unused_workflow_status_jstarter, migrations.RunPython.noop),
        migrations.RunPython(new_change_reason_for_x135, migrations.RunPython.noop),
    ]
