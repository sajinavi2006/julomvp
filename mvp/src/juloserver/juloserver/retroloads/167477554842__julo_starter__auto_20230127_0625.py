# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-01-26 23:25
from __future__ import unicode_literals

from django.db import migrations

from juloserver.julo.constants import WorkflowConst
from juloserver.julo.models import StatusLookup, WorkflowStatusPath, Workflow, WorkflowStatusNode, \
    StatusLabel
from juloserver.julo.statuses import ApplicationStatusCodes


def run(apps, schema_editor):
    # Create new status Lookup x108 with the description
    if not StatusLookup.objects.filter(
            status_code=ApplicationStatusCodes.JULO_STARTER_AFFORDABILITY_CHECK
    ).exists():
        StatusLookup.objects.create(
            status_code=ApplicationStatusCodes.JULO_STARTER_AFFORDABILITY_CHECK,
            status="Julo starter affordability check",
        )

    # Change wrong handler for 149
    status149 = StatusLookup.objects.filter(
        status_code=149
    ).last()
    if status149:
        status149.handler = None
        status149.save()

    # Set workflow status path
    workflow_starter = Workflow.objects.get(name=WorkflowConst.JULO_STARTER)
    paths = [(105, 108, 'happy'), (105, 107, 'detour')]
    for path in paths:
        if WorkflowStatusPath.objects.filter(
            workflow=workflow_starter,
            status_previous=path[0],
            status_next=path[1]
        ).exists():
            continue

        WorkflowStatusPath.objects.create(
            workflow=workflow_starter,
            status_previous=path[0],
            status_next=path[1],
            type=path[2],
            is_active=True,
            customer_accessible=False,
            agent_accessible=True
        )

    # Set workflow status node
    if not WorkflowStatusNode.objects.filter(workflow=workflow_starter, status_node=108).exists():
        WorkflowStatusNode.objects.create(
            workflow=workflow_starter,
            status_node=108,
            handler="JuloStarter108Handler"
        )

    # Set status label
    if not StatusLabel.objects.filter(status=108).exists():
        StatusLabel.objects.create(status=108, label_name="Tahap Review", label_colour="#757575")


class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
        migrations.RunPython(run, migrations.RunPython.noop),
    ]
