# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-11-27 10:23
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.auth.models import User
from juloserver.followthemoney.models import LenderCurrent
from juloserver.followthemoney.services import generate_lender_signature
from juloserver.julo.models import (
    Partner,
    FeatureSetting,
)
from juloserver.julo.constants import FeatureNameConst


USERNAME = 'bni_channeling'
NEW_ADDRESS = 'Grha BNI Jl. Jenderal Sudirman Kavling 1, Jakarta Pusat'
NEW_LICENSE_NUMBER = '9120000262908'
NEW_POC_EMAIL = 'athe.ginting@julo.co.id'
NEW_POC_PHONE = '+6281299135560'
NEW_SIGNATURE_KEY = 'lender3'


def update_bni_channeling_lender(apps, schema_editor):
    user = User.objects.filter(username=USERNAME).last()
    if user:
        user.email = NEW_POC_EMAIL
        user.save()

    partner = Partner.objects.get_or_none(user=user)
    if partner:
        partner.email = NEW_POC_EMAIL
        partner.poc_email = NEW_POC_EMAIL
        partner.poc_phone = NEW_POC_PHONE
        partner.company_address = NEW_ADDRESS
        partner.save()

    lender = LenderCurrent.objects.get_or_none(user=user)
    if lender:
        lender.lender_address = NEW_ADDRESS
        lender.poc_email = NEW_POC_EMAIL
        lender.poc_phone = NEW_POC_PHONE
        lender.license_number = NEW_LICENSE_NUMBER
        lender.save()


def update_list_lender_info_fs_for_bni_channeling_lender(apps, schema_editor):
    feature_setting = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.LIST_LENDER_INFO
    ).last()
    feature_setting.parameters['lenders'][USERNAME]['address'] = NEW_ADDRESS
    feature_setting.parameters['lenders'][USERNAME]['license_no'] = NEW_LICENSE_NUMBER
    feature_setting.save()


def create_new_certificate_for_bni_channeling_lender(apps, schema_editor):
    bni_channeling_lender = LenderCurrent.objects.get_or_none(lender_name=USERNAME)
    if bni_channeling_lender:
        generate_lender_signature(lender=bni_channeling_lender, signature_key=NEW_SIGNATURE_KEY)


def update_signature_key_configuration_for_bni_channeling_lender(apps, schema_editor):
    feature_setting = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.SIGNATURE_KEY_CONFIGURATION
    ).last()
    if not feature_setting:
        return

    bni_channeling_lender = LenderCurrent.objects.get_or_none(lender_name=USERNAME)
    if bni_channeling_lender:
        feature_setting.parameters['users'][str(bni_channeling_lender.user.id)] = NEW_SIGNATURE_KEY
        feature_setting.save()


class Migration(migrations.Migration):
    dependencies = []

    operations = [
        migrations.RunPython(update_bni_channeling_lender, migrations.RunPython.noop),
        migrations.RunPython(
            update_list_lender_info_fs_for_bni_channeling_lender, migrations.RunPython.noop
        ),
        migrations.RunPython(
            create_new_certificate_for_bni_channeling_lender, migrations.RunPython.noop
        ),
        migrations.RunPython(
            update_signature_key_configuration_for_bni_channeling_lender, migrations.RunPython.noop
        ),
    ]
