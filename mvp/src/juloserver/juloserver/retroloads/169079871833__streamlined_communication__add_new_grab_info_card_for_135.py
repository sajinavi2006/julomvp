# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-07-31 10:18
from __future__ import unicode_literals

from builtins import object
from django.db import migrations
from juloserver.julo.statuses import ApplicationStatusCodes
from juloserver.streamlined_communication.models import (InfoCardButtonProperty,
                                                         CardProperty,
                                                         InfoCardProperty,
                                                         StreamlinedMessage,
                                                         StreamlinedCommunication)
from juloserver.streamlined_communication.constant import CommunicationPlatform
from juloserver.julo.models import StatusLookup, Image

M_BUTTON = 'M.BUTTON'


class ImageNames(object):
    DESIGNS_REAL = 'info-card/data_bg.png'


def create_image(image_source_id, image_type, image_url):
    image = Image()
    image.image_source = image_source_id
    image.image_type = image_type
    image.url = image_url
    image.save()


def retroload_cards_data_grab(_apps, _schema_editor):
    data = {
        'status': ApplicationStatusCodes.APPLICATION_DENIED,
        'additional_condition': 'GRAB_BANK_ACCOUNT_REJECTED',
        'title': 'Harap Ubah Nomor Rekening Kamu',
        'content': 'Nomor rekening yang kamu daftarkan belum sesuai kriteria. '
                   'Yuk, ubah sesuai kriteria agar dapat lanjutkan proses pendaftaran. ',
        'button': ['Perbaiki Rekening Bank '],
        'button_name': [M_BUTTON],
        'click_to': ['/change-bank'],
        'template_type': '2',
        'card_number': 1,
        'text_colour': '#ffffff',
        'title_colour': '#ffffff',
        'background_url': ImageNames.DESIGNS_REAL,
        'additional_images': [],
        'button_url': ['nil'],
        'show_in_web': False,
        'show_in_android': False,
    }
    button_2_properties = {
       'card_type': '2',
       'title': data['title'],
       'title_color': data['title_colour'],
       'text_color': data['text_colour'],
       'card_order_number': data['card_number']
    }
    info_card = InfoCardProperty.objects.create(**button_2_properties)
    button_info_card = dict()
    if data['button']:
        for idx, image_url in enumerate(data['button']):
            button_info_card['info_card_property'] = info_card
            button_info_card['text'] = data['button'][idx]
            button_info_card['button_name'] = data['button_name'][idx]
            button_info_card['action_type'] = CardProperty.WEBPAGE
            button_info_card['destination'] = data['click_to'][idx]
            button_info_card['text_color'] = data['text_colour']
            button, _ = InfoCardButtonProperty.objects.get_or_create(**button_info_card)

    data_streamlined_message = {'message_content': data['content'],
                                'info_card_property': info_card}
    message = StreamlinedMessage.objects.create(**data_streamlined_message)
    status = StatusLookup.objects.filter(status_code=data['status']).last()
    data_for_streamlined_comms = {
        'status_code': status,
        'status': data['status'],
        'communication_platform': CommunicationPlatform.INFO_CARD,
        'message': message,
        'description': 'retroloaded_card_information',
        'is_active': True,
        'extra_conditions': data['additional_condition'],
        'show_in_web': data['show_in_web'],
        'show_in_android': data['show_in_android'],
    }
    streamlined_communication = StreamlinedCommunication.objects.create(**data_for_streamlined_comms)
    # create image for background
    if data['background_url']:
        create_image(info_card.id, CardProperty.IMAGE_TYPE.card_background_image, data['background_url'])


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(retroload_cards_data_grab, migrations.RunPython.noop)
    ]
