# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-03-14 07:57
from __future__ import unicode_literals

from builtins import object
from django.db import migrations
from juloserver.julo.statuses import ApplicationStatusCodes
from juloserver.streamlined_communication.models import (InfoCardButtonProperty,
                                                         CardProperty,
                                                         InfoCardProperty,
                                                         StreamlinedMessage,
                                                         StreamlinedCommunication)
from juloserver.streamlined_communication.constant import CommunicationPlatform
from juloserver.julo.models import StatusLookup, Image


class ImageNames(object):
    DESIGNS_REAL = 'info-card/data_bg.png'


def create_image(image_source_id, image_type, image_url):
    image = Image()
    image.image_source = image_source_id
    image.image_type = image_type
    image.url = image_url
    image.save()


def retroload_card_data_phone_number_check(_apps, _schema_editor):
    data = {
        'status': ApplicationStatusCodes.APPLICATION_DENIED,
        'additional_condition': CardProperty.GRAB_PHONE_NUMBER_CHECK_FAILED,
        'title': 'Pengajuan GrabModal Gagal, Nomormu Terdaftar di Produk JULO Lain',
        'content': 'Silahkan gunakan pinjaman dari produk JULO yang '
                   'kamu daftarkan dengan nomor ini, ya ',
        'button': [],
        'button_name': [],
        'click_to': [],
        'template_type': '2',
        'card_number': 1,
        'text_colour': '#ffffff',
        'title_colour': '#ffffff',
        'background_url': ImageNames.DESIGNS_REAL,
        'additional_images': [],
        'button_url': [],
    }

    button_2_properties = {
       'card_type': '2',
       'title': data['title'],
       'title_color': data['title_colour'],
       'text_color': data['text_colour'],
       'card_order_number': data['card_number']
    }

    info_card = InfoCardProperty.objects.create(**button_2_properties)
    data_streamlined_message = {
        'message_content': data['content'],
        'info_card_property': info_card
    }
    message = StreamlinedMessage.objects.create(**data_streamlined_message)
    status = StatusLookup.objects.filter(status_code=data['status']).last()
    data_for_streamlined_comms = {
        'status_code': status,
        'status': data['status'],
        'communication_platform': CommunicationPlatform.INFO_CARD,
        'message': message,
        'description': 'retroloaded grab card move auth information',
        'is_active': True,
        'extra_conditions': data['additional_condition']
    }

    StreamlinedCommunication.objects.create(**data_for_streamlined_comms)

    # create image for background
    if data['background_url']:
        create_image(
            info_card.id,
            CardProperty.IMAGE_TYPE.card_background_image,
            data['background_url']
        )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(retroload_card_data_phone_number_check, migrations.RunPython.noop)
    ]
