# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-04-07 06:11
from __future__ import unicode_literals

from django.db import migrations
from juloserver.streamlined_communication.constant import CommunicationPlatform, CardProperty

from juloserver.julo.constants import VoiceTypeStatus


from juloserver.streamlined_communication.models import StreamlinedCommunication



from juloserver.streamlined_communication.models import StreamlinedMessage



def add_nexmo_robocall_j1_collection_tailor(apps, schema_editor):
    
    


    # J1 -3 and -5
    message_content = '[{"action": "talk","voiceName": "Damayanti","text": "Selamat {{greet}} {{ name_with_title }}, '\
                      'angsuran JULO Anda {{ due_amount }} rupiah akan jatuh tempo dalam {{ days_before_due_date }} hari."}, '\
                      '{"action": "talk","voiceName": "Damayanti","text": "Bayar sekarang dan dapatkan kesbek sebesar 3 persen."}, '\
                      '{"action": "talk","voiceName": "Damayanti","text": "Tekan 1 untuk konfirmasi. Terima kasih"}, '\
                      '{"action": "input","maxDigits": 1,"eventUrl": ["{{input_webhook_url}}"]}]'

    #J1 -3 bull
    robocall_reminder_tminus3_bull = \
        StreamlinedMessage.objects.create(
            message_content=message_content,
            parameter="{greet,name_with_title,due_amount,days_before_due_date,input_webhook_url}"
        )

    streamlined_communication_for_robocall_reminder_j1_intminus3_bull = StreamlinedCommunication.objects.get_or_create(
        message=robocall_reminder_tminus3_bull,
        status="Robocall customer when dpd -3",
        communication_platform=CommunicationPlatform.ROBOCALL,
        template_code="nexmo_robocall_j1_-3_bull",
        dpd=-3,
        type=VoiceTypeStatus.PAYMENT_REMINDER,
        product="nexmo_j1",
        is_automated=True,
        description="send nexmo robocall j1 payment reminder dpd-3",
        function_name="{send_voice_account_payment_reminder,"
                      "retry_send_voice_account_payment_reminder1,"
                      "retry_send_voice_account_payment_reminder2}",
        call_hours="{8:01,10:01,12:01}",
        attempts=3,
        criteria={'segment': 'bull'},
        extra_conditions=CardProperty.J1_NEXMO_ROBOCALL_COLLECTION_TAILORED
    )


    #J1 -3 elephant
    robocall_reminder_tminus3_elephant = \
        StreamlinedMessage.objects.create(
            message_content=message_content,
            parameter="{greet,name_with_title,due_amount,days_before_due_date,input_webhook_url}"
        )

    streamlined_communication_for_robocall_reminder_j1_intminus3_elephant = StreamlinedCommunication.objects.get_or_create(
        message=robocall_reminder_tminus3_elephant,
        status="Robocall customer when dpd -3",
        communication_platform=CommunicationPlatform.ROBOCALL,
        template_code="nexmo_robocall_j1_-3_elephant",
        dpd=-3,
        type=VoiceTypeStatus.PAYMENT_REMINDER,
        product="nexmo_j1",
        is_automated=True,
        description="send nexmo robocall j1 payment reminder dpd-3",
        function_name="{send_voice_account_payment_reminder,"
                      "retry_send_voice_account_payment_reminder1,"
                      "retry_send_voice_account_payment_reminder2}",
        call_hours="{8:01,10:01,12:01}",
        attempts=3,
        criteria={'segment': 'elephant'},
        extra_conditions=CardProperty.J1_NEXMO_ROBOCALL_COLLECTION_TAILORED
    )


    # J1 -3 scorpion
    robocall_reminder_tminus3_scorpion = \
        StreamlinedMessage.objects.create(
            message_content=message_content,
            parameter="{greet,name_with_title,due_amount,days_before_due_date,input_webhook_url}"
        )

    streamlined_communication_for_robocall_reminder_j1_intminus3_scorpion = StreamlinedCommunication.objects.get_or_create(
        message=robocall_reminder_tminus3_scorpion,
        status="Robocall customer when dpd -3",
        communication_platform=CommunicationPlatform.ROBOCALL,
        template_code="nexmo_robocall_j1_-3_scorpion",
        dpd=-3,
        type=VoiceTypeStatus.PAYMENT_REMINDER,
        product="nexmo_j1",
        is_automated=True,
        description="send nexmo robocall j1 payment reminder dpd-3",
        function_name="{send_voice_account_payment_reminder,"
                      "retry_send_voice_account_payment_reminder1,"
                      "retry_send_voice_account_payment_reminder2}",
        call_hours="{8:01,10:01,12:01}",
        attempts=3,
        criteria={'segment': 'scorpion'},
        extra_conditions=CardProperty.J1_NEXMO_ROBOCALL_COLLECTION_TAILORED
    )


    # J1 -5 bull
    robocall_reminder_tminus5_bull = \
        StreamlinedMessage.objects.create(
            message_content=message_content,
            parameter="{greet,name_with_title,due_amount,days_before_due_date,input_webhook_url}"
        )
    
    streamlined_communication_for_robocall_reminder_j1_intminus5_bull = StreamlinedCommunication.objects.get_or_create(
        message=robocall_reminder_tminus5_bull,
        status="Robocall customer when dpd -5",
        communication_platform=CommunicationPlatform.ROBOCALL,
        template_code="nexmo_robocall_j1_-5_bull",
        dpd=-5,
        type=VoiceTypeStatus.PAYMENT_REMINDER,
        product="nexmo_j1",
        is_automated=True,
        description="send nexmo robocall j1 payment reminder dpd-5",
        function_name="{send_voice_account_payment_reminder,"
                      "retry_send_voice_account_payment_reminder1,"
                      "retry_send_voice_account_payment_reminder2}",
        call_hours="{8:00,10:00,12:00}",
        attempts=3,
        criteria={'segment': 'bull'},
        extra_conditions=CardProperty.J1_NEXMO_ROBOCALL_COLLECTION_TAILORED
    )


    # J1 -5 scorpion
    robocall_reminder_tminus5_scorpion = \
        StreamlinedMessage.objects.create(
            message_content=message_content,
            parameter="{greet,name_with_title,due_amount,days_before_due_date,input_webhook_url}"
        )

    streamlined_communication_for_robocall_reminder_j1_intminus5_scorpion = StreamlinedCommunication.objects.get_or_create(
        message=robocall_reminder_tminus5_scorpion,
        status="Robocall customer when dpd -5",
        communication_platform=CommunicationPlatform.ROBOCALL,
        template_code="nexmo_robocall_j1_-5_scorpion",
        dpd=-5,
        type=VoiceTypeStatus.PAYMENT_REMINDER,
        product="nexmo_j1",
        is_automated=True,
        description="send nexmo robocall j1 payment reminder dpd-5",
        function_name="{send_voice_account_payment_reminder,"
                      "retry_send_voice_account_payment_reminder1,"
                      "retry_send_voice_account_payment_reminder2}",
        call_hours="{8:00,10:00,12:00}",
        attempts=3,
        criteria={'segment': 'scorpion'},
        extra_conditions=CardProperty.J1_NEXMO_ROBOCALL_COLLECTION_TAILORED
    )



class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(add_nexmo_robocall_j1_collection_tailor, migrations.RunPython.noop),
    ]
