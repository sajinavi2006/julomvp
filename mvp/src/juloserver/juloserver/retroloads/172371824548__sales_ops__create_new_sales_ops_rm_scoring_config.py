# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-08-15 10:37
from __future__ import unicode_literals

from django.db import migrations
from juloserver.sales_ops.models import SalesOpsRMScoringConfig


def bulk_create_sales_ops_rm_scoring_config(apps, schema_editor):
    # Clean up SalesOpsRMScoring before retroloading
    sales_ops_rm_scoring_mappings = {
        1: {'criteria': 'monetary', 'score': '3', 'is_active': True, 'customer_type': None,
            'min_value': 2_000_000, 'max_value': None, 'field_name': 'available_limit'},
        2: {'criteria': 'monetary', 'score': '2', 'is_active': True, 'customer_type': None,
            'min_value': 1_000_000, 'max_value': 2_000_000, 'field_name': 'available_limit'},
        3: {'criteria': 'monetary', 'score': '1', 'is_active': True, 'customer_type': None,
            'min_value': None, 'max_value': 1_000_000, 'field_name': 'available_limit'},
        4: {'criteria': 'recency', 'score': '4', 'is_active': True, 'customer_type': 'ftc',
            'min_value': 1, 'max_value': 14, 'field_name': 'days_after_application_history_x190_cdate'},
        5: {'criteria': 'recency', 'score': '3', 'is_active': True, 'customer_type': 'ftc',
            'min_value': 14, 'max_value': 30, 'field_name': 'days_after_application_history_x190_cdate'},
        6: {'criteria': 'recency', 'score': '2', 'is_active': True, 'customer_type': 'ftc',
            'min_value': 30, 'max_value': 60, 'field_name': 'days_after_application_history_x190_cdate'},
        7: {'criteria': 'recency', 'score': '1', 'is_active': True, 'customer_type': 'ftc',
            'min_value': 60, 'max_value': None, 'field_name': 'days_after_application_history_x190_cdate'},
        8: {'criteria': 'recency', 'score': '4', 'is_active': True, 'customer_type': 'repeat_os',
            'min_value': 13, 'max_value': 30, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
        9: {'criteria': 'recency', 'score': '3', 'is_active': True, 'customer_type': 'repeat_os',
            'min_value': 30, 'max_value': 60, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
        10: {'criteria': 'recency', 'score': '2', 'is_active': True, 'customer_type': 'repeat_os',
             'min_value': 60, 'max_value': 90, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
        11: {'criteria': 'recency', 'score': '1', 'is_active': True, 'customer_type': 'repeat_os',
             'min_value': 90, 'max_value': None, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
        12: {'criteria': 'recency', 'score': '4', 'is_active': True, 'customer_type': 'repeat_no_os',
             'min_value': 13, 'max_value': 30, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
        13: {'criteria': 'recency', 'score': '3', 'is_active': True, 'customer_type': 'repeat_no_os',
             'min_value': 30, 'max_value': 60, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
        14: {'criteria': 'recency', 'score': '2', 'is_active': True, 'customer_type': 'repeat_no_os',
             'min_value': 60, 'max_value': 90, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
        15: {'criteria': 'recency', 'score': '1', 'is_active': True, 'customer_type': 'repeat_no_os',
             'min_value': 90, 'max_value': None, 'field_name': 'days_after_latest_loan_fund_transfer_ts'},
    }
    create_list = []
    for rm_score_id, values in sales_ops_rm_scoring_mappings.items():
        create_list.append(
            SalesOpsRMScoringConfig(
                criteria=values['criteria'],
                score=values['score'],
                is_active=values['is_active'],
                customer_type=values['customer_type'],
                min_value=values['min_value'],
                max_value=values['max_value'],
                field_name=values['field_name'],
            )
        )
    SalesOpsRMScoringConfig.objects.bulk_create(create_list)


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(bulk_create_sales_ops_rm_scoring_config, migrations.RunPython.noop),
    ]
