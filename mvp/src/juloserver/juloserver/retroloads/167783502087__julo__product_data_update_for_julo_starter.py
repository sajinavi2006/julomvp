# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-03-03 09:17
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.models import ProductProfile, ProductLine, ProductLookup
from juloserver.julo.constants import ProductLineCodes


def update_product_data(apps, schema_editor):

    product_line = ProductLine.objects.get_or_none(product_line_code=ProductLineCodes.JULO_STARTER)
    if product_line:

        # product profile
        product_profile = ProductProfile.objects.get_or_none(code=ProductLineCodes.JULO_STARTER)
        if not product_profile:
            product_profile = ProductProfile.objects.create(
                code=ProductLineCodes.JULO_STARTER,
                name='J-STARTER',
                min_amount=500000,
                max_amount=1500000,
                min_duration=1,
                max_duration=3,
                min_interest_rate=0.03,
                max_interest_rate=0.08,
                interest_rate_increment=0,
                payment_frequency='Monthly',
                min_origination_fee=0.07,
                max_origination_fee=0.07,
                origination_fee_increment=0,
                late_fee=0.05,
                cashback_initial=0.01,
                cashback_payment=0.01,
                is_active=True,
                debt_income_ratio=0.3,
                is_product_exclusive=False,
                is_initial=True
            )

            # Product lookup
            product_lookup = ProductLookup.objects.get_or_none(product_line=ProductLineCodes.JULO_STARTER)
            if not product_lookup:
                ProductLookup.objects.create(
                    product_name='I.840-O.070-L.050-C1.000-C2.000-M',
                    interest_rate=0.84,
                    origination_fee_pct=0.07,
                    late_fee_pct=0.05,
                    cashback_initial_pct=0,
                    cashback_payment_pct=0,
                    is_active=True,
                    product_line=product_line,
                    product_profile=product_profile
                )

                product_line.update_safely(product_profile=product_profile)


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(update_product_data, migrations.RunPython.noop),
    ]
