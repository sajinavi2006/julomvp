# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-06-17 22:40
from dateutil.relativedelta import relativedelta
from django.db import migrations
from django.utils import timezone

from juloserver.julo.models import ExperimentSetting
from juloserver.application_flow.models import ApplicationTag, ApplicationPathTagStatus
from juloserver.julo.constants import ExperimentConst


def run(apps, schema_editor):
    if not ExperimentSetting.objects.filter(
        code=ExperimentConst.LANNISTER_EXPERIMENT,
    ).exists():
        now = timezone.localtime(timezone.now())
        ExperimentSetting.objects.create(
            is_active=False,
            code=ExperimentConst.LANNISTER_EXPERIMENT,
            name="LannisterCustomerSegment",
            start_date=now,
            end_date=now + relativedelta(days=30),
            schedule="",
            action='{"count": 0}',
            type="underwriting",
            criteria={
                "limit": 2500,
                "experiment_group": '1, 2, 3',
                "cm_parameter": 'feature:is_goldfish',
            },
        )

    tag_data = [
        'is_lannister',
    ]
    for tag in tag_data:
        ApplicationTag.objects.create(application_tag=tag)

    application_tag_data = [
        ['is_lannister', 0, 'control'],
        ['is_lannister', 1, 'experiment'],
    ]
    for application_tag in application_tag_data:
        ApplicationPathTagStatus.objects.create(
            application_tag=application_tag[0],
            status=application_tag[1],
            definition=application_tag[2],
        )


class Migration(migrations.Migration):

    dependencies = []

    operations = [migrations.RunPython(run, migrations.RunPython.noop)]
