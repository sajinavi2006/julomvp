# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-12-07 04:33
from __future__ import unicode_literals

from django.contrib.auth.models import Group, User
from django.db import migrations

from juloserver.julo.models import (
    Customer,
    ProductProfile,
    ProductLine,
    ProductLookup,
    ProductLineLoanPurpose,
    Partner,
)

from juloserver.julo.product_lines import ProductLineCodes
from juloserver.portal.object.bulk_upload.constants import (
    MerchantFinancingCSVUploadPartner,
    MerchantFinancingCSVUploadPartnerDueDateType,
)

from django.conf import settings


def add_product_line_efishery_kabayan_reguler(apps, schema_editor):
    monthly_payment_frequency = 'Monthly'
    efishery_kabayan_reguler_product_profile = ProductProfile.objects.filter(code=ProductLineCodes.EFISHERY_KABAYAN_REGULER).last()
    efishery_kabayan_reguler_product_line = ProductLine.objects.filter(product_line_code=ProductLineCodes.EFISHERY_KABAYAN_REGULER).last()

    if efishery_kabayan_reguler_product_profile:
        efishery_kabayan_reguler_product_profile.update_safely(
            name=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
            code=ProductLineCodes.EFISHERY_KABAYAN_REGULER,
            min_amount=1000000,
            max_amount=200000000,
            min_duration=1,
            max_duration=6,
            min_interest_rate=0.03,
            max_interest_rate=0.03,
            interest_rate_increment=0,
            payment_frequency=monthly_payment_frequency,
            min_origination_fee=0,
            max_origination_fee=0.0115,
            late_fee=0.03,
            cashback_initial=0,
            cashback_payment=0,
            debt_income_ratio=0.3,
            origination_fee_increment=0,
            is_active=True,
            is_initial=False,
            is_product_exclusive=False,
        )
    else:
        efishery_kabayan_reguler_product_profile, _ = ProductProfile.objects.get_or_create(
            name=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
            code=ProductLineCodes.EFISHERY_KABAYAN_REGULER,
            min_amount=1000000,
            max_amount=200000000,
            min_duration=1,
            max_duration=6,
            min_interest_rate=0.03,
            max_interest_rate=0.03,
            interest_rate_increment=0,
            payment_frequency=monthly_payment_frequency,
            min_origination_fee=0,
            max_origination_fee=0.0115,
            late_fee=0.03,
            cashback_initial=0,
            cashback_payment=0,
            debt_income_ratio=0.3,
            origination_fee_increment=0,
            is_active=True,
            is_initial=False,
            is_product_exclusive=False,
        )

    if efishery_kabayan_reguler_product_line:
        efishery_kabayan_reguler_product_line.update_safely(
            product_line_code=ProductLineCodes.EFISHERY_KABAYAN_REGULER,
            product_line_type=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
            min_amount=1000000,
            max_amount=200000000,
            min_duration=30,
            max_duration=180,
            min_interest_rate=0.012,
            max_interest_rate=0.012,
            payment_frequency=monthly_payment_frequency,
            product_profile=efishery_kabayan_reguler_product_profile
        )
    else:
        efishery_kabayan_reguler_product_line, _ = ProductLine.objects.get_or_create(
            product_line_code=ProductLineCodes.EFISHERY_KABAYAN_REGULER,
            product_line_type=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
            min_amount=1000000,
            max_amount=200000000,
            min_duration=30,
            max_duration=180,
            min_interest_rate=0.012,
            max_interest_rate=0.012,
            payment_frequency=monthly_payment_frequency,
            product_profile=efishery_kabayan_reguler_product_profile
        )

    product_lookup = ProductLookup.objects.filter(
        product_line=efishery_kabayan_reguler_product_line,
        product_profile=efishery_kabayan_reguler_product_profile
    ).last()

    if product_lookup:
        product_lookup.update_safely(
            product_name="I.0144-O.0115-L.030-C1.000-C2.000-M",
            interest_rate=0.144,
            origination_fee_pct=0.0115,
            late_fee_pct=0.03,
            cashback_initial_pct=0,
            cashback_payment_pct=0
        )
    else:
        ProductLookup.objects.get_or_create(
            product_line=efishery_kabayan_reguler_product_line,
            product_profile=efishery_kabayan_reguler_product_profile,
            product_name="I.0144-O.0115-L.030-C1.000-C2.000-M",
            interest_rate=0.144,
            origination_fee_pct=0.0115,
            late_fee_pct=0.03,
            cashback_initial_pct=0,
            cashback_payment_pct=0
        )

    efishery_kabayan_reguler_product_line_loan_purpose = ProductLineLoanPurpose.objects.filter(
        product_line=efishery_kabayan_reguler_product_line
    ).last()
    if efishery_kabayan_reguler_product_line_loan_purpose:
        efishery_kabayan_reguler_product_line_loan_purpose.loan_purpose_id = 1
        efishery_kabayan_reguler_product_line_loan_purpose.save()
    else:
        ProductLineLoanPurpose.objects.get_or_create(
            product_line=efishery_kabayan_reguler_product_line,
            loan_purpose_id=1
        )


def create_partner_efishery_kabayan_reguler(apps, schema_editor):
    group = Group.objects.get(name="julo_partners")

    user = User.objects.create(
        username=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
        email='lutfie.rismawan2@efishery.com',
    )
    user.groups.add(group)

    if settings.ENVIRONMENT == 'prod':
        app_190_email_recipients = 'kabayan@efishery.com'
        disburse_email_recipients = "egi.septiar@efishery.com,james.salim@julofinance.com,ridwan.hilmy@efishery.com,emilia.mariss@efishery.com,galih.aulia@efishery.com"
    else:
        app_190_email_recipients = 'fujiatma.napitupulu@julofinance.com,rafika.solicha@julofinance.com'
        disburse_email_recipients = 'fujiatma.napitupulu@julofinance.com,rafika.solicha@julofinance.com'

    efishery_kabayan_reguler_product_line = ProductLine.objects.filter(
        product_line_code=ProductLineCodes.EFISHERY_KABAYAN_REGULER
    ).last()

    partner = Partner.objects.create(
        user=user,
        poc_email='lutfie.rismawan@efishery.com',
        poc_phone='',
        poc_name=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
        name=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
        email='lutfie.rismawan@efishery.com',
        company_name=MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
        is_active=True,
        is_csv_upload_applicable=True,
        partner_bank_account_number='2818811999',
        partner_bank_account_name='TEKNOLOGI UNTUK PEMBUDID',
        partner_bank_name='BCA',
        is_disbursement_to_partner_bank_account=True,
        recipients_email_address_for_190_application=app_190_email_recipients,
        recipients_email_address_for_bulk_disbursement=disburse_email_recipients,
        sender_email_address_for_190_application='ops.efishery@julo.co.id',
        sender_email_address_for_bulk_disbursement='ops.efishery@julo.co.id',
        due_date_type=MerchantFinancingCSVUploadPartnerDueDateType.END_OF_TENOR,
        product_line=efishery_kabayan_reguler_product_line,
    )

    Customer.objects.create(user=user, email='lutfie.efishery.kabayan.reguler@efishery.com', phone=partner.phone)

    efishery_kabayan_reguler_product_line = ProductLine.objects.filter(product_line_code=ProductLineCodes.EFISHERY_KABAYAN_REGULER).last()


class Migration(migrations.Migration):

    operations = [
        migrations.RunPython(add_product_line_efishery_kabayan_reguler, migrations.RunPython.noop),
        migrations.RunPython(create_partner_efishery_kabayan_reguler, migrations.RunPython.noop),
    ]
