# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-12-24 05:42
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.models import FeatureSetting
from juloserver.julo.constants import FeatureNameConst


def run_ios_license(apps, schema_editor):
    fs = FeatureSetting.objects
    if not fs.filter(feature_name=FeatureNameConst.LIVENESS_DETECTION_IOS_LICENSE).exists():
        fs.create(
            feature_name=FeatureNameConst.LIVENESS_DETECTION_IOS_LICENSE,
            category="Application",
            description="Feature setting for iOS Liveness Detection License",
            is_active=False,
            parameters={
                "version": "2.1",
                "contract": {
                    "customer": "JULO",
                    "expiration": {"day": 28, "month": 2, "year": 2026},
                    "hwids": ["A8BD0SCr1YlAiHID"],
                    "products": ["iface"],
                    "idkit": {"database_size": 0, "max_client_connections": 0},
                    "dot": {
                        "mobile": {
                            "face": {"enabled": True},
                            "document": {"enabled": True},
                            "faceLite": {"enabled": True},
                            "palm": {"enabled": True},
                        }
                    },
                },
                "contract_signature": "IOIyDN4gO6AWcCF5QA/eBaK3BiU4NDlxPRCu2+QZw79bI5Wmns0zKAItB2VVOzF3ZWN92q6lMSK+gx1+K/V+mwjzAURHdiFQIhyOAb3zLLQwBjPbMtLnyNdvmZpH5zVms36lelanjXQPQwY/McQx2LFM9GSBB4rj6sbqDgex9gI=",
            },
        )


def add_parameters_for_ios_and_android_feature_setting(apps, schema_editor):
    fs = FeatureSetting.objects.filter(feature_name=FeatureNameConst.NEW_LIVENESS_DETECTION).last()
    android_settings = {
        "android": {
            "retry": 2,
            "timeout": 5,
            "is_active": True,
            "timeout_retry": 2,
            "smile_threshold": 0.9,
            "passive_threshold": 0.8,
            "eye_gaze_threshold": 1,
            "magnifeye_threshold": 0.9,
            "skip_application_failed": True,
        }
    }

    # New settings for iOS
    ios_settings = {
        "ios": {
            "retry": 3,
            "timeout": 5,
            "is_active": True,
            "timeout_retry": 3,
            "smile_threshold": 0.92,
            "passive_threshold": 0.8,
            "eye_gaze_threshold": 1,
            "magnifeye_threshold": 0.7,
            "skip_application_failed": True,
        }
    }

    if fs:
        old_params = fs.parameters
        new_params = old_params.copy()
        new_params.update(android_settings)
        new_params.update(ios_settings)
        fs.parameters = new_params
        fs.save()


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(run_ios_license, migrations.RunPython.noop),
        migrations.RunPython(
            add_parameters_for_ios_and_android_feature_setting, migrations.RunPython.noop
        ),
    ]
