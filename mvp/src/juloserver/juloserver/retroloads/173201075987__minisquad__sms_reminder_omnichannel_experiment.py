# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-11-19 10:05
from __future__ import unicode_literals

from dateutil.relativedelta import relativedelta
from django.utils import timezone
from django.db import migrations

from juloserver.julo.models import ExperimentSetting
from juloserver.minisquad.constants import ExperimentConst


def create_sms_reminder_omnichannel_experiment(apps, schema_editor):
    criteria = {
        'experiment_group': {
            "sms_control_group": {
                'dpd_list': [-5, -3, -2, -1, 0, 1, 3, 5, 7],
                'customer_id_tail': [f"{i:02}" for i in range(0, 70)],
            },
            "sms_experiment_group_1": {
                'dpd_list': [-5, -3, -2, -1, 0, 1, 3, 5, 7],
                'customer_id_tail': [f"{i:02}" for i in range(70, 85)],
            },
            "sms_experiment_group_2": {
                'dpd_list': [-5, -3, -2, -1, 0, 1, 3, 5, 7],
                'customer_id_tail': [f"{i:02}" for i in range(85, 100)],
            },
        },
        'omnichannel_attribute_name': 'coll_experiment_{}_group'.format(
            ExperimentConst.SMS_REMINDER_OMNICHANNEL_EXPERIMENT
        ),
        'omnichannel_sending_threshold': 50000,
    }
    now = timezone.localtime(timezone.now())
    ExperimentSetting.objects.create(
        is_active=False,
        code=ExperimentConst.SMS_REMINDER_OMNICHANNEL_EXPERIMENT,
        name=ExperimentConst.SMS_REMINDER_OMNICHANNEL_EXPERIMENT,
        start_date=now,
        end_date=now + relativedelta(days=15),
        schedule="",
        action="",
        type="collection",
        criteria=criteria,
    )


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(create_sms_reminder_omnichannel_experiment, migrations.RunPython.noop)
    ]
