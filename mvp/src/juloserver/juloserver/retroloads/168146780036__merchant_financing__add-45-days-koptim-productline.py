# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-04-14 10:23
from __future__ import unicode_literals

from django.db import migrations
from juloserver.portal.object.bulk_upload.constants import MerchantFinancingCSVUploadPartner
from juloserver.julo.models import (
    ProductLine, ProductProfile, ProductLookup, ProductLineLoanPurpose, Partner
)
from juloserver.julo.product_lines import ProductLineCodes

def add_product_line_45_for_kopersi_tunas_partner(apps, schema_editor):
    kargo_product_line = ProductLine.objects.\
        filter(product_line_code=ProductLineCodes.KOPERASI_TUNAS_45).last()
    kargo_product_profile = ProductProfile.objects.\
        filter(code=ProductLineCodes.KOPERASI_TUNAS_45).last()
    product_profile_data = {
        'name': 'koperasi tunas 45',
        'code': ProductLineCodes.KOPERASI_TUNAS_45,
        'min_amount': 1000000,
        'max_amount': 50000000,
        'min_duration': 45,
        'max_duration': 45,
        'min_interest_rate': 0.0325,
        'max_interest_rate': 0.0325,
        'interest_rate_increment': 0,
        'payment_frequency': 'Monthly',
        'min_origination_fee': 0.03,
        'max_origination_fee': 0.03,
        'late_fee': 0.05,
        'cashback_initial': 0,
        'cashback_payment': 0,
        'debt_income_ratio': 0.3
    }
    if kargo_product_profile:
        kargo_product_profile.update_safely(**product_profile_data)
    else:
        kargo_product_profile, _ = ProductProfile.objects.get_or_create(**product_profile_data)

    product_line_data = {
        'product_line_type': 'koperasi tunas 45',
        'min_amount': 1000000,
        'max_amount': 50000000,
        'min_duration': 45,
        'max_duration': 45,
        'min_interest_rate': 0.0325,
        'max_interest_rate': 0.0325,
        'payment_frequency': 'Monthly',
        'product_profile': kargo_product_profile
    }
    if kargo_product_line:
        kargo_product_line.update_safely(**product_line_data)
    else:
        product_line_data.update({
            'product_line_code': ProductLineCodes.KOPERASI_TUNAS_45
        })
        kargo_product_line, _ = ProductLine.objects.get_or_create(**product_line_data)
    product_lookup = ProductLookup.objects.\
        filter(product_line=kargo_product_line, product_profile=kargo_product_profile).last()
    product_lookup_data = {
        'product_name': "I.00325-O.000-L.005-C1.000-C2.000-M",
        'interest_rate': 0.39,
        'origination_fee_pct': 0,
        'late_fee_pct': 0.05,
        'cashback_initial_pct': 0,
        'cashback_payment_pct': 0
    }
    if product_lookup:
        product_lookup.update_safely(**product_lookup_data)

    else:
        product_lookup_data.update({
            'product_line': kargo_product_line,
            'product_profile': kargo_product_profile
        })
        ProductLookup.objects.get_or_create(**product_lookup_data)

    kargo_product_line_loan_purpose = ProductLineLoanPurpose.objects.filter(
        product_line=kargo_product_line
    ).last()
    if kargo_product_line_loan_purpose:
        kargo_product_line_loan_purpose.loan_purpose_id = 1
        kargo_product_line_loan_purpose.save()
    else:
        ProductLineLoanPurpose.objects.get_or_create(
            product_line=kargo_product_line,
            loan_purpose_id=1
        )

    partner = Partner.objects.filter(name=MerchantFinancingCSVUploadPartner.KOPERASI_TUNAS_45).last()
    if partner:
        product_line = ProductLine.objects.filter(
            product_line_code=ProductLineCodes.KOPERASI_TUNAS_45).last()
        if product_line:
            partner.product_line = product_line
            partner.save(update_fields=['product_line'])

class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(add_product_line_45_for_kopersi_tunas_partner, migrations.RunPython.noop)
    ]
