# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-08-25 05:00
from __future__ import unicode_literals

from django.contrib.auth.models import Group, User
from django.db import migrations

from juloserver.julo.models import (
    Customer,
    ProductProfile,
    ProductLine,
    ProductLookup,
    ProductLineLoanPurpose,
    Partner,
)

from juloserver.julo.product_lines import ProductLineCodes
from juloserver.portal.object.bulk_upload.constants import (
    MerchantFinancingCSVUploadPartner,
    MerchantFinancingCSVUploadPartnerDueDateType,
)

from django.conf import settings


class PaymentConst:
    PAYMENT_FREQUENCY = 'Monthly'


def update_product_line_fishlog(apps, schema_editor):
    fishlog_product_profile = ProductProfile.objects.filter(code=ProductLineCodes.FISHLOG).last()
    fishlog_product_line = ProductLine.objects.filter(product_line_code=ProductLineCodes.FISHLOG).last()

    if fishlog_product_line:
        fishlog_product_line.update_safely(
            product_line_type=MerchantFinancingCSVUploadPartner.FISHLOG,
            min_amount=200000000,
            max_amount=2000000000,
            min_duration=2,
            max_duration=3,
            min_interest_rate=0.011,
            max_interest_rate=0.011,
            payment_frequency=PaymentConst.PAYMENT_FREQUENCY,
            product_profile=fishlog_product_profile
        )

    else:
        efishery_jawara_product_line, _ = ProductLine.objects.get_or_create(
            product_line_code=ProductLineCodes.FISHLOG,
            product_line_type=MerchantFinancingCSVUploadPartner.FISHLOG,
            min_amount=200000000,
            max_amount=2000000000,
            min_duration=2,
            max_duration=3,
            min_interest_rate=0.011,
            max_interest_rate=0.011,
            payment_frequency=PaymentConst.PAYMENT_FREQUENCY,
            product_profile=fishlog_product_profile
        )

    product_lookup, created = ProductLookup.objects.get_or_create(
        product_line=fishlog_product_line,
        product_profile=fishlog_product_profile,
        defaults={
            "product_name": "I.00167-O.0000-L.050-C1.000-C2.000-M",
            "interest_rate": 0.2004,
            "origination_fee_pct": 0,
            "late_fee_pct": 0.05,
            "cashback_initial_pct": 0,
            "cashback_payment_pct": 0,
        }
    )

    if not created:
        product_lookup.product_name = "I.00167-O.0000-L.050-C1.000-C2.000-M"
        product_lookup.interest_rate = 0.2004
        product_lookup.origination_fee_pct = 0
        product_lookup.late_fee_pct = 0.05
        product_lookup.cashback_initial_pct = 0
        product_lookup.cashback_payment_pct = 0
        product_lookup.save()

    fishlog_product_line_loan_purpose = ProductLineLoanPurpose.objects.filter(
        product_line=fishlog_product_line
    ).last()
    if fishlog_product_line_loan_purpose:
        fishlog_product_line_loan_purpose.loan_purpose_id = 1
        fishlog_product_line_loan_purpose.save()
    else:
        ProductLineLoanPurpose.objects.get_or_create(
            product_line=fishlog_product_line,
            loan_purpose_id=1
        )


def update_partner_fishlog(apps, schema_editor):
    group = Group.objects.get(name="julo_partners")

    user, created = User.objects.get_or_create(
        username=MerchantFinancingCSVUploadPartner.FISHLOG,
        defaults={
            'email': 'fikri.haekal1@fishlog.co.id',
        }
    )

    user.groups.add(group)

    if settings.ENVIRONMENT == 'prod':
        app_190_email_recipients = "fikri.haekal@fishlog.co.id,syahrul@fishlog.co.id,amir@fishlog.co.id"
        disburse_email_recipients = "fikri.haekal@fishlog.co.id,syahrul@fishlog.co.id,amir@fishlog.co.id"
    else:
        app_190_email_recipients = 'fujiatma.napitupulu@julofinance.com,rafika.solicha@julofinance.com'
        disburse_email_recipients = 'fujiatma.napitupulu@julofinance.com,rafika.solicha@julofinance.com'

    fishlog_product_line = ProductLine.objects.filter(
        product_line_code=ProductLineCodes.FISHLOG
    ).last()

    # Get or create the User and Partner instances
    partner, created = Partner.objects.get_or_create(
        user=user,
        defaults={
            'poc_email': 'fikri.haekal@fishlog.co.id',
            'poc_phone': '',
            'poc_name': MerchantFinancingCSVUploadPartner.FISHLOG,
            'name': MerchantFinancingCSVUploadPartner.FISHLOG,
            'email': 'fikri.haekal@fishlog.co.id',
            'company_name': MerchantFinancingCSVUploadPartner.FISHLOG,
            'is_active': True,
            'is_csv_upload_applicable': True,
            'partner_bank_account_number': '72309000325',
            'partner_bank_account_name': 'PT Rantai Pasok Perikanan',
            'partner_bank_name': 'Bank DKI',
            'is_disbursement_to_partner_bank_account': True,
            'recipients_email_address_for_190_application': app_190_email_recipients,
            'recipients_email_address_for_bulk_disbursement': disburse_email_recipients,
            'sender_email_address_for_190_application': 'ops.fishlog@julo.co.id',
            'sender_email_address_for_bulk_disbursement': 'ops.fishlog@julo.co.id',
            'due_date_type': MerchantFinancingCSVUploadPartnerDueDateType.END_OF_TENOR,
            'product_line': fishlog_product_line,
        }
    )

    # Update fields if the Partner instance already exists
    if not created:
        partner.poc_email = 'fikri.haekal@fishlog.co.id'
        partner.poc_phone = ''
        partner.poc_name = MerchantFinancingCSVUploadPartner.FISHLOG
        partner.name = MerchantFinancingCSVUploadPartner.FISHLOG
        partner.email = 'fikri.haekal@fishlog.co.id'
        partner.company_name = MerchantFinancingCSVUploadPartner.FISHLOG
        partner.is_active = True
        partner.is_csv_upload_applicable = True
        partner.partner_bank_account_number = '72309000325'
        partner.partner_bank_account_name = 'PT Rantai Pasok Perikanan'
        partner.partner_bank_name = 'Bank DKI'
        partner.is_disbursement_to_partner_bank_account = True
        partner.recipients_email_address_for_190_application = app_190_email_recipients
        partner.recipients_email_address_for_bulk_disbursement = disburse_email_recipients
        partner.sender_email_address_for_190_application = 'ops.fishlog@julo.co.id'
        partner.sender_email_address_for_bulk_disbursement = 'ops.fishlog@julo.co.id'
        partner.due_date_type = MerchantFinancingCSVUploadPartnerDueDateType.END_OF_TENOR
        partner.product_line = fishlog_product_line
        partner.save()

    Customer.objects.create(user=user, email='fikri.haekal.fishlog@fishlog.co.id', phone=partner.phone)

    fishlog_product_line = ProductLine.objects.filter(product_line_code=ProductLineCodes.FISHLOG).last()


class Migration(migrations.Migration):
    operations = [
        migrations.RunPython(update_product_line_fishlog, migrations.RunPython.noop),
        migrations.RunPython(update_partner_fishlog, migrations.RunPython.noop),
    ]
