# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-06-06 11:55
from __future__ import unicode_literals

from django.db import migrations

from juloserver.streamlined_communication.constant import CommunicationPlatform, CardProperty
from juloserver.streamlined_communication.models import StreamlinedCommunicationParameterList, \
    StreamlinedCommunication, StreamlinedMessage, StreamlinedCommunicationFunctionList


def add_streamlined_comm_parameters_for_robocall(_apps, _schema_editor):
    data_param_list = [
        StreamlinedCommunicationParameterList(
            parameter_name='{grab_due_amount}',
            description='this will shown our customer '
                        'due amount for grab loans',
            platform=CommunicationPlatform.ROBOCALL
        ),
        StreamlinedCommunicationParameterList(
            parameter_name='{card_grab_dpd}',
            description='this will shown our loan dpd '
                        ' for grab loans only',
            platform=CommunicationPlatform.ROBOCALL
        )
    ]
    data_function_list = [
        StreamlinedCommunicationFunctionList(
            description="Robocall first attempt(GRAB)",
            function_name="send_voice_payment_reminder_grab",
            communication_platform=CommunicationPlatform.ROBOCALL,
            product='nexmo_grab'
        ),
        StreamlinedCommunicationFunctionList(
            description="Robocall second attempt(GRAB)",
            function_name="retry_send_voice_payment_reminder_grab1",
            communication_platform=CommunicationPlatform.ROBOCALL,
            product='nexmo_grab'
        ),
        StreamlinedCommunicationFunctionList(
            description="Robocall third attempt(GRAB)",
            function_name="retry_send_voice_payment_reminder_grab2",
            communication_platform=CommunicationPlatform.ROBOCALL,
            product='nexmo_grab'
        )
    ]
    StreamlinedCommunicationParameterList.objects.bulk_create(data_param_list)
    StreamlinedCommunicationFunctionList.objects.bulk_create(data_function_list)


def add_streamlined_comms_robocall_for_dpd_3_and_6(_apps, _schema_editor):
    robocall_grab_dpd_6 = \
        StreamlinedMessage.objects.create(
            message_content='[{"action": "talk","voiceName": "Damayanti","text": "Selamat {{greet}}'
                            '{{ fullname }}, pembayaran GrabModal anda sudah terlambat selama {{ card_grab_dpd }} hari.'
                            'Mohon segera lakukan top up Dompet Tunai/Kredit anda dengan Nominal sebesar '
                            '{{grab_due_amount}}"},{"action": "talk","voiceName": "Damayanti","text":'
                            '"Tekan 1 untuk konfirmasi. Terima kasih"},'
                            '{"action": "input","maxDigits": 1,"eventUrl": ["{{input_webhook_url}}"]}]',
            parameter="{greet,fullname,card_grab_dpd,grab_due_amount,input_webhook_url}"
        )

    robocall_grab_dpd_3 = \
        StreamlinedMessage.objects.create(
            message_content='[{"action": "talk","voiceName": "Damayanti","text": "Selamat {{greet}}'
                            '{{ fullname }}, pembayaran GrabModal anda sudah terlambat selama {{ card_grab_dpd }} hari.'
                            'Mohon segera lakukan top up Dompet Tunai/Kredit anda dengan Nominal sebesar '
                            '{{grab_due_amount}}"},{"action": "talk","voiceName": "Damayanti","text":'
                            '"Tekan 1 untuk konfirmasi. Terima kasih"},'
                            '{"action": "input","maxDigits": 1,"eventUrl": ["{{input_webhook_url}}"]}]',
            parameter="{greet,fullname,card_grab_dpd,grab_due_amount,input_webhook_url}"
        )

    extra_conditions = [CardProperty.GRAB_ROBOCALL_MEDIUM_C_SCORE, CardProperty.GRAB_ROBOCALL_LOW_C_SCORE,
                        CardProperty.GRAB_ROBOCALL_HIGH_C_SCORE, None]
    for extra_condition in extra_conditions:
        robocall_grab_dpd_6 = \
            StreamlinedMessage.objects.create(
                message_content='[{"action": "talk","voiceName": "Damayanti","text": "Selamat {{greet}}'
                                '{{ fullname }}, pembayaran GrabModal anda sudah '
                                'terlambat selama {{ card_grab_dpd }} hari.'
                                'Mohon segera lakukan top up Dompet Tunai/Kredit anda dengan Nominal sebesar '
                                '{{grab_due_amount}}"},{"action": "talk","voiceName": "Damayanti","text":'
                                '"Tekan 1 untuk konfirmasi. Terima kasih"},'
                                '{"action": "input","maxDigits": 1,"eventUrl": ["{{input_webhook_url}}"]}]',
                parameter="{greet,fullname,card_grab_dpd,grab_due_amount,input_webhook_url}"
            )

        robocall_grab_dpd_3 = \
            StreamlinedMessage.objects.create(
                message_content='[{"action": "talk","voiceName": "Damayanti","text": "Selamat {{greet}}'
                                '{{ fullname }}, pembayaran GrabModal anda sudah '
                                'terlambat selama {{ card_grab_dpd }} hari.'
                                'Mohon segera lakukan top up Dompet Tunai/Kredit anda dengan Nominal sebesar '
                                '{{grab_due_amount}}"},{"action": "talk","voiceName": "Damayanti","text":'
                                '"Tekan 1 untuk konfirmasi. Terima kasih"},'
                                '{"action": "input","maxDigits": 1,"eventUrl": ["{{input_webhook_url}}"]}]',
                parameter="{greet,fullname,card_grab_dpd,grab_due_amount,input_webhook_url}"
            )
        StreamlinedCommunication.objects.get_or_create(
            message=robocall_grab_dpd_6,
            status="Robocall customer when dpd 6",
            communication_platform=CommunicationPlatform.ROBOCALL,
            template_code='nexmo_grab_med_dpd_6',
            dpd=6,
            product='nexmo_grab', type='Payment Reminder',
            attempts=3, is_automated=True,
            call_hours="{11:0,12:0,13:0}",
            function_name="{send_voice_payment_reminder_grab,retry_send_voice_payment_reminder_grab1,"
                          "retry_send_voice_payment_reminder_grab2}",
            description="this Robocall is send on dpd=6 for grab",
            extra_conditions=extra_condition,
            time_out_duration=30
        )

        StreamlinedCommunication.objects.get_or_create(
            message=robocall_grab_dpd_3,
            status="Robocall customer when dpd 3",
            communication_platform=CommunicationPlatform.ROBOCALL,
            template_code='nexmo_grab_med_dpd_3',
            dpd=3,
            product='nexmo_grab', type='Payment Reminder',
            attempts=3, is_automated=True,
            call_hours="{11:0,12:0,13:0}",
            function_name="{send_voice_payment_reminder_grab,retry_send_voice_payment_reminder_grab1,"
                          "retry_send_voice_payment_reminder_grab2}",
            description="this Robocall is send on dpd=3 for grab",
            extra_conditions=extra_condition,
            time_out_duration=30
        )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(add_streamlined_comm_parameters_for_robocall, migrations.RunPython.noop),
        migrations.RunPython(add_streamlined_comms_robocall_for_dpd_3_and_6, migrations.RunPython.noop)
    ]
