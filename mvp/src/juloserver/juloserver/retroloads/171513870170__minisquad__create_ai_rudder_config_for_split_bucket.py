# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-05-08 03:25
from __future__ import unicode_literals

from django.db import migrations

from juloserver.julo.models import FeatureSetting
from juloserver.minisquad.constants import FeatureNameConst


def add_strategies_config(apps, schema_editor):
    feature_group_mapping_config = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.AI_RUDDER_TASKS_STRATEGY_CONFIG
    ).last()
    if not feature_group_mapping_config:
        return
    params = feature_group_mapping_config.parameters
    new_params = {
        "JULO_B1_groupA": {
            "acwTime": "20",
            "autoQA": "Y",
            "autoSlotFactor": "1",
            "bulkCallInterval": "120",
            "callInterval": "1",
            "contactNumberInterval": "3",
            "dialingMode": "0",
            "dialingOrder": [],
            "end_time": "23:59",
            "maxLostRate": "1.5",
            "qaConfigId": "5",
            "qaLimitLength": 0,
            "qaLimitRate": 100,
            "repeatTimes": "3",
            "rest_times": [["23:00", "23:01"], ["23:05", "23:06"]],
            "resultStrategies": "on",
            "resultStrategiesConfig": [
                {"action": [2], "dncDay": 1, "oper": "==", "title": "Spokewith", "value": "User"}
            ],
            "ringLimit": "120",
            "start_time": "22:00",
        },
        "JULO_B1_groupB": {
            "acwTime": "20",
            "autoQA": "Y",
            "autoSlotFactor": "1",
            "bulkCallInterval": "120",
            "callInterval": "1",
            "contactNumberInterval": "3",
            "dialingMode": "0",
            "dialingOrder": [],
            "end_time": "23:59",
            "maxLostRate": "1.5",
            "qaConfigId": "5",
            "qaLimitLength": 0,
            "qaLimitRate": 100,
            "repeatTimes": "3",
            "rest_times": [["23:00", "23:01"], ["23:05", "23:06"]],
            "resultStrategies": "on",
            "resultStrategiesConfig": [
                {"action": [2], "dncDay": 1, "oper": "==", "title": "Spokewith", "value": "User"}
            ],
            "ringLimit": "120",
            "start_time": "22:00",
        },
        "JULO_B1_groupC": {
            "acwTime": "20",
            "autoQA": "Y",
            "autoSlotFactor": "1",
            "bulkCallInterval": "120",
            "callInterval": "1",
            "contactNumberInterval": "3",
            "dialingMode": "0",
            "dialingOrder": [],
            "end_time": "23:59",
            "maxLostRate": "1.5",
            "qaConfigId": "5",
            "qaLimitLength": 0,
            "qaLimitRate": 100,
            "repeatTimes": "3",
            "rest_times": [["23:00", "23:01"], ["23:05", "23:06"]],
            "resultStrategies": "on",
            "resultStrategiesConfig": [
                {"action": [2], "dncDay": 1, "oper": "==", "title": "Spokewith", "value": "User"}
            ],
            "ringLimit": "120",
            "start_time": "22:00",
        },
    }
    params.update(new_params)
    feature_group_mapping_config.parameters = params
    feature_group_mapping_config.save()
    # group bucket
    feature_agent_group_config = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.AI_RUDDER_GROUP_NAME_CONFIG
    ).last()
    if not feature_agent_group_config:
        return

    agent_params = feature_agent_group_config.parameters
    agent_params["JULO_B1_groupA"] = "Group_Bucket1_A"
    agent_params["JULO_B1_groupB"] = "Group_Bucket1_B"
    agent_params["JULO_B1_groupC"] = "Group_Bucket1_C"
    feature_agent_group_config.parameters = agent_params
    feature_agent_group_config.save()


class Migration(migrations.Migration):

    dependencies = []

    operations = [migrations.RunPython(add_strategies_config, migrations.RunPython.noop)]
