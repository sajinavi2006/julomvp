# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2018-08-01 05:57
from __future__ import unicode_literals

from django.db import migrations, models
from juloserver.julo.statuses import ApplicationStatusCodes

from juloserver.julo.models import WorkflowStatusPath


from juloserver.julo.models import StatusLookup


from juloserver.julo.models import ChangeReason


from juloserver.julo.models import StatusLookup


def load_new_status_lookups(apps, schema_editor):
    
    StatusLookup.objects.create(status_code=ApplicationStatusCodes.VERIFICATION_CALLS_SUCCESSFUL, status="Verification calls successful")
    status_130 = StatusLookup.objects.filter(status_code=ApplicationStatusCodes.APPLICANT_CALLS_SUCCESSFUL).last()
    if status_130:
        status_130.status = "Applicant calls successful"
        status_130.save()

from juloserver.julo.models import WorkflowStatusPath


from juloserver.julo.models import StatusLookup


from juloserver.julo.models import ChangeReason


from juloserver.julo.models import StatusLookup


def update_change_reason(apps, schema_editor):
    
    
    status_130 = StatusLookup.objects.filter(status_code=ApplicationStatusCodes.VERIFICATION_CALLS_SUCCESSFUL).last()
    reasons = ChangeReason.objects.filter(status_id=ApplicationStatusCodes.APPLICANT_CALLS_SUCCESSFUL,
                                              reason__in=['PV Employer Verified',
                                                          'Document Verified - Bank Scrape',
                                                          'Document Verified - Income Doc Upload'])
    for reason in reasons:
        reason.status = status_130
        reason.save()

from juloserver.julo.models import WorkflowStatusPath


from juloserver.julo.models import StatusLookup


from juloserver.julo.models import ChangeReason


from juloserver.julo.models import StatusLookup


def update_workflow_status_path(apps, schema_editor):
    
    workflow_paths = WorkflowStatusPath.objects.filter(status_next=ApplicationStatusCodes.APPLICANT_CALLS_SUCCESSFUL)
    workflow_paths = workflow_paths.exclude(status_previous=ApplicationStatusCodes.VERIFICATION_CALLS_SUCCESSFUL)
    
    for workflow in workflow_paths:
        workflow.is_active = False
        workflow.save()

class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(load_new_status_lookups, migrations.RunPython.noop),
        migrations.RunPython(update_change_reason, migrations.RunPython.noop),
        migrations.RunPython(update_workflow_status_path, migrations.RunPython.noop),
    ]
