# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-02-12 08:23
from __future__ import unicode_literals

from builtins import object
from django.db import migrations
from juloserver.julo.statuses import ApplicationStatusCodes
from juloserver.streamlined_communication.models import (InfoCardButtonProperty,
                                                         CardProperty,
                                                         InfoCardProperty,
                                                         StreamlinedMessage,
                                                         StreamlinedCommunication)
from juloserver.streamlined_communication.constant import CommunicationPlatform
from juloserver.julo.models import StatusLookup, Image

M_BUTTON = 'M.BUTTON'


class ImageNames(object):
    DESIGNS_REAL = 'info-card/data_bg.png'
    OPTIONAL_IMAGE = 'info-card/BOTTOMSHEET_IMG1.png'


def create_image(image_source_id, image_type, image_url):
    image = Image()
    image.image_source = image_source_id
    image.image_type = image_type
    image.url = image_url
    image.save()


def retroload_cards_data_grab(_apps, _schema_editor):
    data = {
        'status': ApplicationStatusCodes.FUND_DISBURSAL_SUCCESSFUL,
        'additional_condition': 'GRAB_FAILED_3MAX_CREDITORS_BOTTOM_SHEET',
        'title': 'Kamu Belum Bisa Ajukan Pinjaman GrabModal',
        'content': "<div>"
                   "<p class='body'>Sesuai aturan OJK, "
                   "kamu hanya bisa punya pinjaman di maks. "
                   "3 aplikasi. Lunasi hingga tersisa 2 pinjaman aktif untuk transaksi di GrabModal, "
                   "ya!</p>"
                   "<p class='body'>Jika pinjamanmu sudah lunas, harap tunggu 1x24 jam "
                   "untuk coba lagi atau hubungi CS JULO."
                   "</p>"
                   "<div class='ticker'>"
                   "<svg xmlns='http://www.w3.org/2000/svg' "
                   "width='16' height='16' "
                   "view-box='0 0 16 16' fill='none'>"
                   "<path d='M12.5256 12.5255C13.7258 11.3252 14.4001 9.69736 14.4001 7.99998C14.4001 "
                   "6.30259 13.7258 4.67473 12.5256 3.47449C11.3253 2.27426 9.69748 1.59998 8.0001 1.59998C6.30271 "
                   "1.59998 4.67485 2.27426 3.47461 3.47449C2.27438 4.67473 1.6001 6.30259 1.6001 7.99998C1.6001 "
                   "9.69736 2.27438 11.3252 3.47461 12.5255C4.67485 13.7257 6.30271 14.4 8.0001 14.4C9.69748 14.4 "
                   "11.3253 13.7257 12.5256 12.5255ZM8.56578 11.7657C8.41575 11.9157 8.21227 12 8.0001 12C7.78792 "
                   "12 7.58444 11.9157 7.43441 11.7657C7.28438 11.6156 7.2001 11.4121 7.2001 11.2C7.2001 10.9878 "
                   "7.28438 10.7843 7.43441 10.6343C7.58444 10.4843 7.78792 10.4 8.0001 10.4C8.21227 10.4 8.41575 "
                   "10.4843 8.56578 10.6343C8.71581 10.7843 8.8001 10.9878 8.8001 11.2C8.8001 11.4121 8.71581 11.6156 "
                   "8.56578 11.7657ZM7.43441 4.23429C7.58444 4.08426 7.78792 3.99998 8.0001 3.99998C8.21227 3.99998 "
                   "8.41575 4.08426 8.56578 4.23429C8.71581 4.38432 8.8001 4.5878 8.8001 4.79998V7.99998C8.8001 "
                   "8.21215 8.71581 8.41563 8.56578 8.56566C8.41575 8.71569 8.21227 8.79998 8.0001 "
                   "8.79998C7.78792 8.79998 7.58444 8.71569 7.43441 8.56566C7.28438 8.41563 "
                   "7.2001 8.21215 7.2001 7.99998V4.79998C7.2001 4.5878 7.28438 4.38432 7.43441 "
                   "4.23429Z' fill='#404040'/></svg>"
                   "<p class='caption'>"
                   "Untuk informasi lebih lanjut, kamu bisa klik<a class='link' "
                   "href='https://julo.co.id/faq/search?keywords=seojk' target='_blank'>di sini</a></p></div>"
                   "</div>",
        'button': ['Mengerti'],
        'button_name': [M_BUTTON],
        'click_to': [],
        'template_type': '2',
        'card_number': 1,
        'text_colour': '#000000',
        'title_colour': '#000000',
        'card_optional_image': ImageNames.OPTIONAL_IMAGE,
        'additional_images': [],
        'button_url': ['nil'],
        'show_in_web': False,
        'show_in_android': False,
    }
    button_2_properties = {
       'card_type': '1',
       'title': data['title'],
       'title_color': data['title_colour'],
       'text_color': data['text_colour'],
       'card_order_number': data['card_number']
    }
    info_card = InfoCardProperty.objects.create(**button_2_properties)
    button_info_card = dict()
    if data['button']:
        for idx, image_url in enumerate(data['button']):
            button_info_card['info_card_property'] = info_card
            button_info_card['text'] = data['button'][idx]
            button_info_card['button_name'] = data['button_name'][idx]
            button_info_card['action_type'] = CardProperty.WEBPAGE
            button_info_card['destination'] = ''
            button_info_card['text_color'] = '#ffffff'
            button_info_card['button_color'] = '#00acf0'
            button, _ = InfoCardButtonProperty.objects.get_or_create(**button_info_card)

    data_streamlined_message = {'message_content': data['content'],
                                'info_card_property': info_card}
    message = StreamlinedMessage.objects.create(**data_streamlined_message)
    status = StatusLookup.objects.filter(status_code=data['status']).last()
    data_for_streamlined_comms = {
        'status_code': status,
        'status': data['status'],
        'communication_platform': CommunicationPlatform.INFO_CARD,
        'message': message,
        'description': 'retroloaded_bottom_sheet_information',
        'is_active': True,
        'extra_conditions': data['additional_condition'],
        'show_in_web': data['show_in_web'],
        'show_in_android': data['show_in_android'],
        'bottom_sheet_destination': '3max_creditor_bottom_sheet',
    }
    streamlined_communication = StreamlinedCommunication.objects.create(**data_for_streamlined_comms)
    # create image for bottom sheet
    if data['card_optional_image']:
        create_image(info_card.id, CardProperty.IMAGE_TYPE.card_optional_image, data['card_optional_image'])


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(retroload_cards_data_grab, migrations.RunPython.noop)
    ]
