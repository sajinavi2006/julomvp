# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2025-03-13 09:49
from __future__ import unicode_literals

from django.db import migrations
from django.contrib.auth.models import Group

from juloserver.application_flow.constants import PartnerNameConstant
from juloserver.julo.models import AuthUser as User
from juloserver.julo.models import Partner
from juloserver.julo.models import FeatureSetting
from juloserver.julo.constants import FeatureNameConst


def create_feature_settings_config_credit_matrix_and_referral_code(apps, _schema_editor):
    partner = Partner.objects.filter(name=PartnerNameConstant.QOALASPF).last()
    if not partner:
        group = Group.objects.get(name="julo_partners")
        user = User.objects.create(
            username=PartnerNameConstant.QOALASPF,
            email='chris.leong@qoala.co.id',
        )
        user.groups.add(group)
        partner = Partner.objects.create(
            user=user,
            poc_email='chris.leong@qoala.co.id',
            poc_name='Chris',
            name=PartnerNameConstant.QOALASPF,
            email='rizki.rahmanda@julofinance.com',
            company_name='PT Qoala',
            company_address='Qoala Plus, Standard Chartered Tower, GoWork Lt. 2, Jl. Prof. DR. Satrio, Karet, Kecamatan Setiabudi, Jakarta, Daerah Khusus Ibukota Jakarta 12950',
            partner_bank_name='BANK SYARIAH INDONESIA',
            is_active=True,
        )

    feature_setting = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.PARTNERSHIP_LEADGEN_CONFIG_CREDIT_MATRIX
    ).exists()
    if not feature_setting:
        FeatureSetting.objects.create(
            feature_name=FeatureNameConst.PARTNERSHIP_LEADGEN_CONFIG_CREDIT_MATRIX,
            is_active=False,
            category='partnership',
            parameters={
                'partners': {
                    PartnerNameConstant.QOALASPF: {
                        'is_active': False,
                        'credit_matrix_type': 'julo1_leadgen',
                    }
                },
                'referral_map': {
                    'aaa1': PartnerNameConstant.QOALASPF,
                },
            },
            description='list of partner custom credit matrix and referral code',
        )


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(
            create_feature_settings_config_credit_matrix_and_referral_code,
            migrations.RunPython.noop,
        )
    ]
