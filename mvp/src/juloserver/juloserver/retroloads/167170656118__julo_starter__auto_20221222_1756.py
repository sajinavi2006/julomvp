# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2022-12-22 10:56
from __future__ import unicode_literals

import pytest

from django.db import migrations

from juloserver.julo.constants import WorkflowConst
from juloserver.julo.models import WorkflowStatusPath, Workflow, WorkflowStatusNode


def run(apps, _schema_editor):
    workflow = Workflow.objects.filter(name=WorkflowConst.JULO_STARTER).last()
    create_workflow_status_paths(workflow)
    create_workflow_status_node(workflow)


def create_workflow_status_paths(workflow):
    paths = [(105, 120, "happy"), (105, 135, "graveyard")]
    for path in paths:
        is_exist = WorkflowStatusPath.objects.filter(
            status_previous=path[0],
            status_next=path[1],
            workflow=workflow
        ).exists()

        if is_exist:
            continue

        WorkflowStatusPath.objects.create(
            workflow=workflow,
            status_previous=path[0],
            status_next=path[1],
            type=path[2],
            is_active=True,
            customer_accessible=False,
            agent_accessible=True
        )


def create_workflow_status_node(workflow):
    nodes = [
        (120, "JuloStarter120Handler",),
        (121, "JuloStarter121Handler",),
        (135, "JuloStarter135Handler",)
    ]

    for node in nodes:
        is_exist = WorkflowStatusNode.objects.filter(
            status_node=node[0],
            handler=node[1],
            workflow=workflow
        ).exists()

        if is_exist:
            continue

        WorkflowStatusNode.objects.create(
            status_node=node[0],
            handler=node[1],
            workflow=workflow
        )


class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
        migrations.RunPython(
            run,
            migrations.RunPython.noop
        ),
    ]
