# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-05-18 05:06
from __future__ import unicode_literals
from __future__ import division

from past.utils import old_div
from django.db import migrations, models
from juloserver.julo.product_lines import ProductLineCodes
from juloserver.julo.statuses import LoanStatusCodes, PaymentStatusCodes

from juloserver.julo.models import Loan
from juloserver.julocore.python2.utils import py2round
from juloserver.julo.models import Payment


def late_fee_amount(loan):
    value = loan.product.late_fee_pct * loan.installment_amount
    return py2round(value if value > 55000 else 55000, -2)


from juloserver.julo.models import Loan



from juloserver.julo.models import Payment



def update_retroactive_late_payment_fee(apps, schema_editor):




    loan_active = list(Loan.objects.exclude(loan_status=LoanStatusCodes.INACTIVE))

    unpaid_payments = Payment.objects.filter(payment_status__lt=PaymentStatusCodes.PAID_ON_TIME, loan__in=loan_active)

    for unpaid_payment in unpaid_payments:
        if unpaid_payment.late_fee_applied == 0 and unpaid_payment.late_fee_amount is not None:
            product_line_code = unpaid_payment.loan.application.product_line.product_line_code
            if product_line_code in (ProductLineCodes.MTL1, ProductLineCodes.MTL2):
                unpaid_payment.late_fee_applied = old_div(unpaid_payment.late_fee_amount, late_fee_amount(unpaid_payment.loan))
            elif product_line_code in (ProductLineCodes.STL1, ProductLineCodes.STL2):
                unpaid_payment .late_fee_applied = old_div(unpaid_payment.late_fee_amount, 100000)

        unpaid_payment.save()


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(update_retroactive_late_payment_fee),
    ]
