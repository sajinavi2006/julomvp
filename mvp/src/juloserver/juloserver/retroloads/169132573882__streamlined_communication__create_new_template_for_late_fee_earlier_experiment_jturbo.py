# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-08-06 12:42
from __future__ import unicode_literals

from django.db import migrations, transaction

from juloserver.julo.constants import VoiceTypeStatus
from juloserver.streamlined_communication.constant import CommunicationPlatform, CardProperty
from juloserver.streamlined_communication.models import StreamlinedCommunication, StreamlinedMessage

def add_nexmo_robocall_for_late_fee_earlier_experiment_jturbo(apps, schema_editor):
    dpd_message_content_map = {
        'dpd_-3': '[{"action": "talk", "voiceName": "Damayanti", "text": "Selamat {{greet}}{{ name_with_title }}, '\
            'angsuran JULO Anda {{ due_amount }} rupiah akan jatuh tempo dalam {{ days_before_due_date }} hari."}, '\
            '{"action": "talk", "voiceName": "Damayanti", "text": "Bayar sekarang dan dapatkan kesbek sebesar 2 persen."}, '\
            '{"action": "talk", "voiceName": "Damayanti", "text": "Tekan 1 untuk konfirmasi. Terima kasih"}, '\
            '{"action": "input", "maxDigits": 1, "eventUrl": ["{{input_webhook_url}}"]}]',
        'dpd_-5': '[{"action": "talk", "voiceName": "Damayanti", "text": "Selamat {{greet}}{{ name_with_title }}, '\
            'angsuran JULO Anda {{ due_amount }} rupiah akan jatuh tempo dalam {{ days_before_due_date }} hari."}, '\
            '{"action": "talk", "voiceName": "Damayanti", "text": "Bayar sekarang dan dapatkan kesbek sebesar 3 persen."}, '\
            '{"action": "talk", "voiceName": "Damayanti", "text": "Tekan 1 untuk konfirmasi. Terima kasih"}, '\
            '{"action": "input", "maxDigits": 1, "eventUrl": ["{{input_webhook_url}}"]}]',
        'dpd_+4': '[{"action": "talk", "voiceName": "Damayanti", "text": "Selamat {{greet}} {{name_with_title}}, '\
            'tagihan JULO kamu sebesar {{due_amount}} terlambat bayar 4 hari. '\
            'Segera bayar karena denda telat bayar akan semakin besar. Terima kasih."}]',
    }

    with transaction.atomic():
        robocall_reminder_dpd_minus_5 = StreamlinedMessage.objects.create(
            message_content=dpd_message_content_map['dpd_-5'],
            parameter="{greet,name_with_title,due_amount,days_before_due_date,input_webhook_url}"
        )
        StreamlinedCommunication.objects.create(
            message=robocall_reminder_dpd_minus_5,
            status="Robocall customer when dpd -5",
            communication_platform=CommunicationPlatform.ROBOCALL,
            template_code="nexmo_robocall_jturbo_-5",
            dpd=-5,
            type=VoiceTypeStatus.PAYMENT_REMINDER,
            product="nexmo_turbo",
            is_automated=True,
            description="JTurbo customer who have t-5",
            function_name="{send_voice_account_payment_reminder,"\
                "retry_send_voice_account_payment_reminder1,"\
                "retry_send_voice_account_payment_reminder2}",
            call_hours="{8:0,10:0,12:0}",
            attempts=3, 
            criteria={'segment': 'None'},
            partner_selection_action='exclude',
            exclude_risky_customer=True,
            time_out_duration=30,
            partner_selection_list = "{4,19,20,24,10,9,21,12,17,22,23,27,45,28,25,11,26,41,42,29,30,31,32,33,34,35,36,37,38,39,40,43,44,1,53,56,61,63,46}",
            extra_conditions=CardProperty.LATE_FEE_EARLIER_EXPERIMENT,
        )

        robocall_reminder_dpd_minus_3 = StreamlinedMessage.objects.create(
            message_content=dpd_message_content_map['dpd_-3'],
            parameter="{greet,name_with_title,due_amount,days_before_due_date,input_webhook_url}"
        )
        StreamlinedCommunication.objects.create(
            message=robocall_reminder_dpd_minus_3,
            status="Robocall customer when dpd -3",
            communication_platform=CommunicationPlatform.ROBOCALL,
            template_code="nexmo_robocall_jturbo_-3",
            dpd=-3,
            type=VoiceTypeStatus.PAYMENT_REMINDER,
            product="nexmo_turbo",
            is_automated=True,
            description="nexmo robocall for calling t-3 jturbo customer",
            function_name="{send_voice_account_payment_reminder,"\
                "retry_send_voice_account_payment_reminder1,"\
                "retry_send_voice_account_payment_reminder2}",
            call_hours="{8:1,10:1,12:1}",
            attempts=3, 
            criteria={'segment': 'None'},
            partner_selection_action='exclude',
            exclude_risky_customer=True,
            time_out_duration=30,
            partner_selection_list = "{4,19,20,24,10,9,21,12,17,22,23,27,45,28,25,11,26,41,42,29,30,31,32,33,34,35,36,37,38,39,40,43,44,1,53,56,58,60,61,62,63,55,46}",
            extra_conditions=CardProperty.LATE_FEE_EARLIER_EXPERIMENT,
        )


        robocall_reminder_dpd_plus_4 = StreamlinedMessage.objects.create(
            message_content=dpd_message_content_map['dpd_+4'],
            parameter="{greet,name_with_title,due_amount}"
        )
        StreamlinedCommunication.objects.create(
            message=robocall_reminder_dpd_plus_4,
            status="Robocall customer when dpd +4",
            communication_platform=CommunicationPlatform.ROBOCALL,
            template_code="nexmo_robocall_jturbo_4",
            dpd=4,
            type=VoiceTypeStatus.PAYMENT_REMINDER,
            product="nexmo_turbo",
            is_automated=True,
            description="nexmo robocall for jturbo customer at dpd 4",
            function_name="{send_voice_account_payment_reminder,"\
                "retry_send_voice_account_payment_reminder1,"\
                "retry_send_voice_account_payment_reminder2}",
            call_hours="{8:2,10:2,12:2}",
            attempts=3, 
            criteria={'segment': 'None'},
            partner_selection_action='exclude',
            exclude_risky_customer=False,
            time_out_duration=30,
            partner_selection_list = "{4,19,20,24,10,9,21,12,17,22,23,27,45,28,25,11,26,41,42,29,30,31,32,33,34,35,36,37,38,39,40,43,44,46,1,53,56,55,58,60,61,62,63}",
            extra_conditions=CardProperty.LATE_FEE_EARLIER_EXPERIMENT,
        )

class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
        migrations.RunPython(add_nexmo_robocall_for_late_fee_earlier_experiment_jturbo,
                             migrations.RunPython.noop),
    ]
