# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2025-01-18 02:23
from __future__ import unicode_literals

from django.db import migrations

from juloserver.julo.models import Partner
from juloserver.partnership.constants import PartnershipFlag
from juloserver.partnership.models import PartnershipFlowFlag
from juloserver.portal.object.bulk_upload.constants import MerchantFinancingCSVUploadPartner


def add_mfsp_bank_validation_config(apps, schema_editor):
    list_partner_name = {
        MerchantFinancingCSVUploadPartner.GAJIGESA,
        MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_REGULER,
        MerchantFinancingCSVUploadPartner.EFISHERY_JAWARA,
        MerchantFinancingCSVUploadPartner.EFISHERY_INTI_PLASMA,
        MerchantFinancingCSVUploadPartner.AGRARI,
        MerchantFinancingCSVUploadPartner.KARGO,
        MerchantFinancingCSVUploadPartner.RABANDO,
        MerchantFinancingCSVUploadPartner.EFISHERY_KABAYAN_LITE,
        MerchantFinancingCSVUploadPartner.FISHLOG,
        MerchantFinancingCSVUploadPartner.DAGANGAN,
        MerchantFinancingCSVUploadPartner.EFISHERY,
        MerchantFinancingCSVUploadPartner.DEMO_MFSP_DUMMY_PARTNER,
    }
    partners = Partner.objects.filter(name__in=list_partner_name).values_list('id', flat=True)

    if not partners:
        return

    data_to_insert = []
    for partner_id in partners:
        data_to_insert.append(
            PartnershipFlowFlag(
                partner_id=partner_id,
                name=PartnershipFlag.PAYMENT_GATEWAY_SERVICE,
                configs={'payment_gateway_service': False},
            )
        )

    if data_to_insert:
        PartnershipFlowFlag.objects.bulk_create(data_to_insert)


class Migration(migrations.Migration):

    dependencies = []

    operations = [migrations.RunPython(add_mfsp_bank_validation_config, migrations.RunPython.noop)]
