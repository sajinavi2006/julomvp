# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-12-31 06:46
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.models import FeatureSetting
from juloserver.minisquad.constants import FeatureNameConst, DialerSystemConst


def adjust_dialing_order_for_other_numbers(apps, schema_editor):
    bucket_names = [DialerSystemConst.DIALER_BUCKET_3, DialerSystemConst.DIALER_BUCKET_4]
    # create new airudder configuration for bucket related
    feature_group_mapping_config = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.AI_RUDDER_TASKS_STRATEGY_CONFIG
    ).last()
    if not feature_group_mapping_config:
        return
    new_phone_number = 'new_phone_number_{}'
    list_new_phone_numbers = [1, 2, 3]
    list_new_dialing_order = []
    for number in list_new_phone_numbers:
        list_new_dialing_order.append(new_phone_number.format(str(number)))
    params = feature_group_mapping_config.parameters
    for bucket_name in bucket_names:
        bucket_params = params.get(bucket_name)
        dialing_order = bucket_params.get('dialingOrder', [])
        if dialing_order:
            bucket_params.update(dialingOrder=dialing_order.extend(list_new_dialing_order))
        else:
            bucket_params.update(dialingOrder=list_new_dialing_order)
        params.update({bucket_name: bucket_params})

    feature_group_mapping_config.parameters = params
    feature_group_mapping_config.save()


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(adjust_dialing_order_for_other_numbers, migrations.RunPython.noop),
    ]
