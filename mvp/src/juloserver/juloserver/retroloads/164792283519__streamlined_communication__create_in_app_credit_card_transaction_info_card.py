# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2022-03-22 04:20
from __future__ import unicode_literals

from django.db import migrations
from builtins import str
from builtins import object
from django.db import migrations
from juloserver.julo.utils import upload_file_to_oss
from juloserver.streamlined_communication.models import (InfoCardButtonProperty,
                                                         CardProperty,
                                                         InfoCardProperty,
                                                         StreamlinedMessage,
                                                         StreamlinedCommunication)
from juloserver.streamlined_communication.constant import CommunicationPlatform, CardProperty
from juloserver.julo.models import Image
from django.conf import settings
R_BUTTON = 'R.BUTTON'
L_BUTTON = 'L.BUTTON'


class ImageNames(object):
    CREDIT_CARD_TRANSACTION_ICON = 'info-card/ICON_CREDIT_CARD.png'
    CREDIT_CARD_TRANSACTION_L_BUTTON = 'info-card/L_BUTTON_CREDIT_CARD.png'
    CREDIT_CARD_TRANSACTION_R_BUTTON = 'info-card/R_BUTTON_CREDIT_CARD.png'
    BACKGROUND = 'info-card/rectangle_4839.png'


def create_image(image_source_id, image_type, image_url):
    image = Image()
    image.image_source = image_source_id
    image.image_type = image_type
    image.url = image_url
    image.save()


def retroload_cards_data_credit_card_transaction(apps, schema_editor):
    data_to_be_loaded = [
        {
            'additional_condition': None,
            'title': 'Ubah cicilan dan pilih tenor untuk kebebasan transaksi kamu',
            'content': '',
            'button': ['Lewati', 'Ubah tenor'],
            'button_name': [L_BUTTON, R_BUTTON],
            'click_to': ['skip_choose_tenor', 'choose_tenor'],
            'card_number': 1,
            'text_colour': '#00ACF0',
            'title_colour': '#00ACF0',
            'background_url': ImageNames.BACKGROUND,
            'additional_images': [ImageNames.CREDIT_CARD_TRANSACTION_ICON],
            'button_text_color': ['#00ACF0', '#FFFFFF'],
            'button_background': [ImageNames.CREDIT_CARD_TRANSACTION_L_BUTTON,
                                  ImageNames.CREDIT_CARD_TRANSACTION_R_BUTTON],
            'button_background_type': ['L', 'R'],
            'button_url': [],
        },
    ]
    for data in data_to_be_loaded:
        info_card_properties = {'card_type': '3a',
                                'title': data['title'],
                                'title_color': data['title_colour'],
                                'text_color': data['text_colour'],
                                'card_order_number': data['card_number']}
        info_card = InfoCardProperty.objects.create(**info_card_properties)

        button_info_card = dict()
        if data['button']:
            for idx, image_url in enumerate(data['button']):
                button_info_card['info_card_property'] = info_card
                button_info_card['text'] = data['button'][idx]
                button_info_card['button_name'] = data['button_name'][idx]
                button_info_card['action_type'] = CardProperty.APP_DEEPLINK
                button_info_card['destination'] = data['click_to'][idx]
                button_info_card['text_color'] = data['button_text_color'][idx]
                button, _ = InfoCardButtonProperty.objects.get_or_create(**button_info_card)
                create_image(button.id, CardProperty.IMAGE_TYPE.button_background_image,
                             str(data['button_background'][idx]))

        data_streamlined_message = {'message_content': data['content'],
                                    'info_card_property': info_card}
        message = StreamlinedMessage.objects.create(**data_streamlined_message)
        data_for_streamlined_comms = {
            'status_code': None,
            'status': None,
            'communication_platform': CommunicationPlatform.INFO_CARD,
            'message': message,
            'description': 'retroload_credit_card_transaction_choose_tenor',
            'is_active': True,
            'extra_conditions': CardProperty.CREDIT_CARD_TRANSACTION_CHOOSE_TENOR
        }
        streamlined_communication = StreamlinedCommunication.objects.create(
            **data_for_streamlined_comms)
        # create image for background
        if data['background_url']:
            create_image(
                info_card.id,
                CardProperty.IMAGE_TYPE.card_background_image, data['background_url'])

        if data['additional_images']:
            additional_image_url = data['additional_images']
            additional_image_url = additional_image_url[0]
            create_image(info_card.id, CardProperty.IMAGE_TYPE.card_optional_image,
                         str(additional_image_url))

    # upload image
    images_list = [
        'ICON_CREDIT_CARD.png',
        'L_BUTTON_CREDIT_CARD.png',
        'R_BUTTON_CREDIT_CARD.png',
        'rectangle_4839.png',
    ]
    for image_name in images_list:
        remote_path = 'info-card/{}'.format(image_name)
        upload_file_to_oss(
            settings.OSS_PUBLIC_ASSETS_BUCKET,
            settings.STATICFILES_DIRS[0] + '/images/info_card/{}'.format(image_name),
            remote_path
        )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(retroload_cards_data_credit_card_transaction,
                             migrations.RunPython.noop)
    ]
