# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-11-24 10:17
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.models import FaqFeature
from juloserver.julo.constants import FaQSectionNameConst


def insert_faq_cashback_new_scheme_data(apps, schema_editor):
    description1 = ("Cashback beruntun adalah skema terbaru dari JULO, "
                    "kamu bisa maksimalkan jumlah cashback bisa didapat dengan melipat gandakan "
                    "persentase cashback sesuai dengan jumlah tagihan yang terbayarkan")
    description2 = ("Cukup dengan membayar tagihan di JULO paling lambat 2 hari sebelum tanggal "
                    "jatuh tempo di setiap bulannya, cashback kamu juga akan meningkat setiap bulannya.")
    description3 = ("Jumlah cashback kamu akan terakumulasi persentasenya setiap bulan dengan "
                    "kenaikan 1% dan maksimum di 5% sesuai dengan jumlah tagihan yang kamu bayarkan")
    description4 = ("Betul, cashback hanya akan berlaku jika kamu membayar tagihan paling lambat 2 hari sebelum jatuh tempo")
    description5 = ("Cashback kamu akan tetap terakumulasi seperti sesuai dengan skema cashback berlipat")
    description6 = ("<ul><li>Kamu tidak memiliki kesempatan untuk mendapatkan cashback di bulan tersebut</li>"
                    "<li>Kamu berpotensi memutus akumulasi potensi cashback beruntun kamu kembali menjadi 1%</li><ul>")
    description7 = ("Kamu tidak akan mendapatkan cashback di bulan tersebut, "
                    "berpotensi memutus akumulasi potensi cashback beruntun kamu kembali menjadi 1%, "
                    "serta berpotensi terkena denda keterlambatan.")
    description8 = ("Akumulasi cashback beruntun kamu akan kami pertahankan di dalam akun kamu "
                    "sampai kamu kembali menggunakan JULO")
    description9 = ("Jumlah cashback kamu akan diakumulasi secara bertahap, "
                    "dan cashback kamu akan cair setelah tagihan pada pinjaman tersebut sudah lunas dibayarkan. "
                    "Tagihan yang sudah dibayar sesuai dengan S&K di atas, "
                    "cashback akan tetap terakumulasi Sedangkan tagihan yang tidak dibayarkan sesuai dengan S&K di atas, "
                    "cashback tidak akan terakumulasi.")

    data = [
        {
            'title': 'Apa itu cashback beruntun?',
            'description':  description1,
            'order_priority': 1,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Bagaimana cara mendapatkan cashback beruntun?',
            'description': description2,
            'order_priority': 2,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Berapa maksimal cashback yang bisa saya dapatkan?',
            'description': description3,
            'order_priority': 3,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Apakah cashback hanya bisa didapat dengan membayar tagihan paling lambat 2 hari sebelum jatuh tempo?',
            'description':  description4,
            'order_priority': 4,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Bagaimana jika saya membayar jauh hari sebelum jatuh tempo?',
            'description': description5,
            'order_priority': 5,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Bagaimana jika saya membayar 1 hari sebelum atau pada saat jatuh tempo?',
            'description': description6,
            'order_priority': 6,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Apa yang terjadi jika saya telat membayar tagihan (melewati jatuh tempo)?',
            'description':  description7,
            'order_priority': 7,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Apa yang terjadi dengan cashback beruntun saya jika saya tidak bertransaksi dengan JULO?',
            'description': description8,
            'order_priority': 8,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        },
        {
            'title': 'Kapan cashback saya akan cair?',
            'description': description9,
            'order_priority': 9,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME,
        }
    ]

    for item in data:
        FaqFeature.objects.get_or_create(
            title = item['title'],
            description = item['description'],
            order_priority = item['order_priority'],
            visible = item['visible'],
            section_name = item['section_name'],
        )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(insert_faq_cashback_new_scheme_data, migrations.RunPython.noop)
    ]

