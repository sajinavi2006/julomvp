# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2021-04-14 00:37
from __future__ import unicode_literals

from django.db import migrations
from juloserver.payment_point.models import TransactionMethod, TransactionCategory
from juloserver.payment_point.constants import TransactionMethodCode


def data_seed_for_transaction_category(app, schema_editor):
    categories = [
        TransactionCategory(
            name='tunai',
            fe_display_name='Tunai',
        ),
        TransactionCategory(
            name='tagihan',
            fe_display_name='Tagihan',
        ),
        TransactionCategory(
            name='belanja',
            fe_display_name='Belanja',
        ),
    ]
    TransactionCategory.objects.bulk_create(categories)


def retroload_category_in_transaction_method(app, schema_editor):
    transaction_method_categories = [
        {
            'category_name': 'tunai',
            'transaction_method_ids': [TransactionMethodCode.SELF.code, TransactionMethodCode.OTHER.code,
                                       TransactionMethodCode.DOMPET_DIGITAL.code]
        },
        {
            'category_name': 'tagihan',
            'transaction_method_ids': [TransactionMethodCode.PULSA_N_PAKET_DATA.code,
                                       TransactionMethodCode.PASCA_BAYAR.code,
                                       TransactionMethodCode.LISTRIK_PLN.code,
                                       TransactionMethodCode.BPJS_KESEHATAN.code]
        },
        {
            'category_name': 'belanja',
            'transaction_method_ids': [TransactionMethodCode.E_COMMERCE.code]
        },
    ]
    for transaction_method_category in transaction_method_categories:
        transaction_category = TransactionCategory.objects.filter(
            name=transaction_method_category['category_name']
        ).last()
        if transaction_category:
            TransactionMethod.objects.filter(
                pk__in=transaction_method_category['transaction_method_ids']
            ).update(transaction_category=transaction_category)


def retroload_order_number_in_transaction_method(app, schema_editor):
    transaction_methods = [
        {
            'id': TransactionMethodCode.SELF.code,
            'order_number': 1,
        },
        {
            'id': TransactionMethodCode.OTHER.code,
            'order_number': 2,
        },
        {
            'id': TransactionMethodCode.PULSA_N_PAKET_DATA.code,
            'order_number': 3,
        },
        {
            'id': TransactionMethodCode.PASCA_BAYAR.code,
            'order_number': 4,
        },
        {
            'id': TransactionMethodCode.DOMPET_DIGITAL.code,
            'order_number': 5,
        },
        {
            'id': TransactionMethodCode.E_COMMERCE.code,
            'order_number': 6,
        },
        {
            'id': TransactionMethodCode.LISTRIK_PLN.code,
            'order_number': 8,
        },
        {
            'id': TransactionMethodCode.BPJS_KESEHATAN.code,
            'order_number': 9,
        },
    ]
    for transaction_method in transaction_methods:
        TransactionMethod.objects.filter(pk=transaction_method['id']).update(
            order_number=transaction_method['order_number']
        )


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(data_seed_for_transaction_category,
                             migrations.RunPython.noop),
        migrations.RunPython(retroload_category_in_transaction_method,
                             migrations.RunPython.noop),
        migrations.RunPython(retroload_order_number_in_transaction_method,
                             migrations.RunPython.noop),
    ]
