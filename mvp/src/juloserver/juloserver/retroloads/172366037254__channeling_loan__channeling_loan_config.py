# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2024-08-14 18:32
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.models import FeatureSetting
from juloserver.channeling_loan.constants import (
    FeatureNameConst,
    ChannelingConst,
    ChannelingLoanApprovalFileConst,
    TransactionMethodConst,
)


def add_dbs_channeling_loan_configuration(apps, _schema_editor):
    channeling_loan_configuration = FeatureSetting.objects.get_or_none(
        feature_name=FeatureNameConst.CHANNELING_LOAN_CONFIG
    )
    if channeling_loan_configuration:
        channeling_loan_configuration.parameters[ChannelingConst.DBS] = {
            "is_active": True,
            "general": {
                "LENDER_NAME": "dbs_channeling",
                "BUYBACK_LENDER_NAME": "jh",
                "EXCLUDE_LENDER_NAME": ["ska", "gfin", "helicap", "ska2"],
                "INTEREST_PERCENTAGE": 15,
                "RISK_PREMIUM_PERCENTAGE": 18,
                "DAYS_IN_YEAR": 360,
                "CHANNELING_TYPE": ChannelingConst.API_CHANNELING_TYPE,
            },
            "rac": {
                "TENOR": "Monthly",
                "MAX_AGE": 59,
                "MIN_AGE": 21,
                "JOB_TYPE": ["Pegawai swasta", "Pegawai negeri", "Pengusaha"],
                "MAX_LOAN": 15000000,
                "MIN_LOAN": 500000,
                "MAX_RATIO": 0.3,
                "MAX_TENOR": 9,
                "MIN_TENOR": 1,
                "MIN_INCOME": 2000000,
                "MIN_WORKTIME": 3,
                "INCOME_PROVE": False,
                "HAS_KTP_OR_SELFIE": False,
                "MOTHER_MAIDEN_NAME": False,
                "VERSION": 1,
                "FTC_FDC": 0,
                "FTC_NON_FDC": 0,
                "NON_FTC": 0,
                "TRANSACTION_METHOD": list(
                    map(str, TransactionMethodConst.TRANSACTION_METHOD_CODES)
                ),
                "INCLUDE_LOAN_ADJUSTED": False,
            },
            "cutoff": {
                "is_active": True,
                "OPENING_TIME": {"hour": 7, "minute": 0, "second": 0},
                "CUTOFF_TIME": {"hour": 20, "minute": 45, "second": 0},
                "INACTIVE_DATE": [],
                "INACTIVE_DAY": [],
                "LIMIT": None,
            },
            "force_update": {
                "is_active": True,
                "VERSION": 2,
            },
            "whitelist": {"is_active": False, "APPLICATIONS": []},
            "process_approval_response": {
                'DELAY_MINS': ChannelingLoanApprovalFileConst.PROCESS_APPROVAL_FILE_DELAY_MINS
            },
            "filename_counter_suffix": {
                "is_active": False,
                "LENGTH": 0,
            },
            "due_date": {
                "is_active": False,
                "ESCLUSION_DAY": [],
            },
            "credit_score": {
                "is_active": False,
                "SCORE": [],
            },
            "b_score": {
                "is_active": False,
                "MAX_B_SCORE": None,
                "MIN_B_SCORE": None,
            },
        }
        channeling_loan_configuration.save()

    channeling_loan_priority = FeatureSetting.objects.get_or_none(
        feature_name=FeatureNameConst.CHANNELING_PRIORITY
    )
    channeling_loan_priority.parameters.append(ChannelingConst.DBS)
    channeling_loan_priority.save()


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(add_dbs_channeling_loan_configuration, migrations.RunPython.noop),
    ]
