# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-10-12 07:37
from __future__ import unicode_literals

from django.db import migrations
from django.conf import settings

from juloserver.julo.models import FeatureSetting, Image
from juloserver.julo.constants import FeatureNameConst
from juloserver.streamlined_communication.models import InfoCardProperty
from juloserver.streamlined_communication.models import InfoCardButtonProperty
from juloserver.streamlined_communication.models import StreamlinedMessage
from juloserver.streamlined_communication.models import StreamlinedCommunication
from juloserver.streamlined_communication.constant import CardProperty, CommunicationPlatform


def new_active_julo1_flag(_apps, _schema_editor):
    FeatureSetting.objects.update_or_create(
        feature_name=FeatureNameConst.ACTIVE_JULO1_FLAG,
        is_active=False,
        category='julo1',
        description='flag to know julo1 is live'
    )


def new_streamline_info_card(_apps, _schema_editor):
    streamline_data = [
        {
            'additional_condition': 'MTL_MIGRATION_CAN_NOT_REAPPLY',
            'title': 'Kini JULO menggunakan sistem limit kredit',
            'content': ('Mohon maaf, Anda belum bisa mengajukan limit kredit JULO saat ini. '
                        '{{reapply_date}}'),
            'button': [],
            'click_to': [],
            'template_type': '1',
            'card_number': 1,
            'text_colour': '#ffffff',
            'title_colour': '#ffffff',
            'button_url': [],
            'background_url': 'info-card/bg.png',
        },
        {
            'additional_condition': 'MTL_MIGRATION_CAN_REAPPLY',
            'title': 'BARU! Limit Kredit JULOðŸŽ‰',
            'content': ('Kini JULO menerapkan pinjaman mudah dengan limit kredit. '
                        'Silahkan ajukan kembali pinjaman Anda dan nikmati '
                        'limit kredit JULO sekarang!'),
            'button': ['Ajukan Kembali'],
            'button_name': ['M.BUTTON'],
            'click_to': 'reapply_j1',
            'template_type': '1',
            'card_number': 1,
            'text_colour': '#ffffff',
            'title_colour': '#ffffff',
            'background_url': 'info-card/bg.png',
            'button_url': ['info-card/blue_button_long.png']
        },
    ]

    for data in streamline_data:
        button_info_card = dict()
        button_properties = {'card_type': '2',
                             'card_action': CardProperty.APP_DEEPLINK,
                             'card_destination': data['click_to'],
                             'title': data['title'],
                             'title_color': data['title_colour'],
                             'text_color': data['text_colour'],
                             'card_order_number': data['card_number']}
        info_card = InfoCardProperty.objects.create(**button_properties)

        for idx, _ in enumerate(data['button']):
            button_info_card['info_card_property'] = info_card
            button_info_card['text'] = data['button'][idx]
            button_info_card['button_name'] = data['button_name'][idx]
            button_info_card['action_type'] = CardProperty.APP_DEEPLINK
            button_info_card['destination'] = data['click_to']
            button_info_card['text_color'] = data['text_colour']
            button = InfoCardButtonProperty.objects.create(**button_info_card)

            image = {'image_source': button.id,
                     'image_type': CardProperty.IMAGE_TYPE.button_background_image,
                     'url': data['button_url'][idx],
                     'service': 'oss'}
            Image.objects.create(**image)

        data_streamlined_message = {'message_content': data['content'],
                                    'info_card_property': info_card}
        message = StreamlinedMessage.objects.create(**data_streamlined_message)

        data_for_streamlined_comms = {'communication_platform': CommunicationPlatform.INFO_CARD,
                                      'message': message,
                                      'description': 'retroloaded_card_information',
                                      'is_active': True,
                                      'extra_conditions': data['additional_condition']}
        StreamlinedCommunication.objects.create(**data_for_streamlined_comms)

        image = {'image_source': info_card.id,
                 'image_type': CardProperty.IMAGE_TYPE.card_background_image,
                 'url': data['background_url'],
                 'service': 'oss'}
        Image.objects.create(**image)


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(new_active_julo1_flag, migrations.RunPython.noop),
        migrations.RunPython(new_streamline_info_card, migrations.RunPython.noop)
    ]
