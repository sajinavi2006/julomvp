# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-09-07 22:12
from __future__ import unicode_literals

from django.db import migrations

from juloserver.followthemoney.models import LenderCurrent
from juloserver.julo.constants import FeatureNameConst
from juloserver.julo.models import FeatureSetting
from juloserver.followthemoney.services import generate_lender_signature


def update_list_info_feature_setting(apps, schema_editor):
    lender_names = {'ska', 'ska2'}
    feature_setting = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.LIST_LENDER_INFO).last()
    if feature_setting:
        parameters = feature_setting.parameters
        for lender_name in lender_names:
            parameters['lenders'][lender_name]['poc_name'] = "Santoso Effendi"
            parameters['lenders'][lender_name]['signature'] = \
                "https://julofiles-staging.oss-ap-southeast-5.aliyuncs.com/signatures/ska_0923.jpg"
        feature_setting.parameters = parameters
        feature_setting.save()


def update_grab_lender_details(apps, schema_editor):
    ska_lenders = LenderCurrent.objects.filter(lender_name__in={'ska', 'ska2'})
    new_email = "santoso.effendi@sentrakalitaabadi.id"
    for ska_lender in ska_lenders:
        user = ska_lender.user
        user.email = new_email
        user.save()
        ska_lender.update_safely(
            poc_name="Santoso Effendi",
            poc_email=new_email
        )


def create_new_certificate_for_ska_lenders(apps, schema_editor):
    ska_lenders = LenderCurrent.objects.filter(lender_name__in={'ska', 'ska2'})
    signature_key = 'lender_santoso'
    for ska_lender in ska_lenders:
        generate_lender_signature(ska_lender, signature_key=signature_key)


def update_signature_key_configuration(apps, schema_editor):
    feature_setting = FeatureSetting.objects.filter(
        feature_name=FeatureNameConst.SIGNATURE_KEY_CONFIGURATION).last()
    if not feature_setting:
        return
    parameter = feature_setting.parameters
    ska_lenders = LenderCurrent.objects.filter(lender_name__in={'ska', 'ska2'})
    for ska_lender in ska_lenders:
        user = ska_lender.user
        parameter['users'][str(user.id)] = 'lender_santoso'
    feature_setting.parameters = parameter
    feature_setting.save()


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.RunPython(update_list_info_feature_setting, migrations.RunPython.noop),
        migrations.RunPython(update_grab_lender_details, migrations.RunPython.noop),
        migrations.RunPython(create_new_certificate_for_ska_lenders, migrations.RunPython.noop),
        migrations.RunPython(update_signature_key_configuration, migrations.RunPython.noop),
    ]
