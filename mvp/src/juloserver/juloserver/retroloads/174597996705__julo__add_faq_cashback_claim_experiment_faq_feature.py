# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2025-04-30 02:26
# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2023-11-24 10:17
from __future__ import unicode_literals

from django.db import migrations
from juloserver.julo.models import FaqFeature
from juloserver.julo.constants import FaQSectionNameConst


def insert_faq_cashback_new_scheme_data(apps, schema_editor):
    data = [
        {
            'title': '"Apakah cashback saya langsung masuk??',
            'description': "Tidak. Cashback perlu diklaim terlebih dahulu lewat email yang kami kirimkan",
            'order_priority': 10,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME_EXPERIMENT,
        },
        {
            'title': 'Bagaimana cara klaim cashback?',
            'description': "Klik link email yang kamu terima, lalu ikuti instruksinya.",
            'order_priority': 11,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME_EXPERIMENT,
        },
        {
            'title': "Ya. Kamu harus klaim sebelum tanggal kedaluwarsa yang tertera di email.",
            'description': "Apakah ada batas waktu klaim?",
            'order_priority': 12,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME_EXPERIMENT,
        },
        {
            'title': "Apa yang terjadi kalau saya tidak klaim?",
            'description': "Cashback akan hangus dan tidak bisa diklaim kembali.",
            'order_priority': 13,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME_EXPERIMENT,
        },
        {
            'title': "Saya tidak menerima email klaim, harus bagaimana?",
            'description': "Cek folder spam/promosi. Jika tetap tidak ada, hubungi Customer Service kami.",
            'order_priority': 14,
            'visible': True,
            'section_name': FaQSectionNameConst.CASHBACK_NEW_SCHEME_EXPERIMENT,
        },
    ]

    for item in data:
        FaqFeature.objects.get_or_create(
            title=item['title'],
            description=item['description'],
            order_priority=item['order_priority'],
            visible=item['visible'],
            section_name=item['section_name'],
        )


class Migration(migrations.Migration):

    dependencies = []

    operations = [
        migrations.RunPython(insert_faq_cashback_new_scheme_data, migrations.RunPython.noop)
    ]
