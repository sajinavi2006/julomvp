# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2021-07-13 05:59
from __future__ import unicode_literals

from django.db import migrations

from juloserver.cootek.constants import CriteriaChoices, DpdConditionChoices
from juloserver.cootek.models import CootekRobot, CootekConfiguration
from juloserver.julo.constants import FeatureNameConst, ExperimentConst
from juloserver.julo.models import FeatureSetting, ExperimentSetting


def change_experiment_to_active_feature(apps, schema_editor):
    old_experiment = ExperimentSetting.objects.get_or_none(
        code=ExperimentConst.COOTEK_LATE_DPD_J1)
    old_experiment.is_permanent = False
    old_experiment.is_active = False
    old_experiment.save()

    FeatureSetting.objects.get_or_create(
        is_active=True,
        feature_name=FeatureNameConst.COOTEK_LATE_DPD_SETTING,
        category="cootek",
        description="cootek late dpd call duration",
        parameters={
            'evening': 120,
            'afternoon': 60,
            'skiptrace_minimum_time_evening': '13:10',
        }
    )
    # delete experiment config
    CootekConfiguration.objects.filter(
        strategy_name__in=('EXPERIMENT_DPD_LATE_1_4', 'EXPERIMENT_DPD_LATE_5_40')
    ).delete()
    cootek_configs = [
        # afternoon
        # dpd 1 - 4
        {
            'strategy_name': 'unconnected_late_dpd_1-4_afternoon',
            'time_to_start': '12:00:00',
            'task_type': 'unconnected_late_dpd_1-4_afternoon',
            'repeat_number': 3, 'called_at': 1, 'called_to': 4,
            'is_active': True, 'dpd_condition': DpdConditionChoices.RANGE,
            'criteria': CriteriaChoices.UNCONNECTED_LATE_DPD,
            'robot_identifier': '93d182db770b381152f5fa5ccd2a519a',
            'time_to_prepare': '11:50:00',
        },
        # dpd 5 - 40
        {
            'strategy_name': 'unconnected_late_dpd_5-40_afternoon',
            'time_to_start': '12:00:00',
            'task_type': 'unconnected_late_dpd_5-40_afternoon',
            'repeat_number': 3, 'called_at': 5, 'called_to': 40,
            'is_active': True, 'dpd_condition': DpdConditionChoices.RANGE,
            'criteria': CriteriaChoices.UNCONNECTED_LATE_DPD,
            'robot_identifier': '92ee3c2eebbe6c4d3bc3d9110bd448b6',
            'time_to_prepare': '11:50:00',
        },
        # dpd 41 - 70
        {
            'strategy_name': 'unconnected_late_dpd_41-70_afternoon',
            'time_to_start': '12:00:00',
            'task_type': 'unconnected_late_dpd_41-70_afternoon',
            'repeat_number': 3, 'called_at': 41, 'called_to': 70,
            'is_active': True, 'dpd_condition': DpdConditionChoices.RANGE,
            'criteria': CriteriaChoices.UNCONNECTED_LATE_DPD,
            'robot_identifier': '92ee3c2eebbe6c4d3bc3d9110bd448b6',
            'robot_name': 'robot_unconnected_late_dpd_41-70',
            'time_to_prepare': '11:50:00',
        },
        # evening
        # dpd 1 - 4
        {
            'strategy_name': 'unconnected_late_dpd_1-4_evening',
            'time_to_start': '18:00:00',
            'task_type': 'unconnected_late_dpd_1-4_evening',
            'repeat_number': 3, 'called_at': 1, 'called_to': 4,
            'is_active': True, 'dpd_condition': DpdConditionChoices.RANGE,
            'criteria': CriteriaChoices.UNCONNECTED_LATE_DPD,
            'robot_identifier': '93d182db770b381152f5fa5ccd2a519a',
            'time_to_prepare': '17:50:00',
        },
        # dpd 5 - 40
        {
            'strategy_name': 'unconnected_late_dpd_5-40_evening',
            'time_to_start': '18:00:00',
            'task_type': 'unconnected_late_dpd_5-40_evening',
            'repeat_number': 3, 'called_at': 5, 'called_to': 40,
            'is_active': True, 'dpd_condition': DpdConditionChoices.RANGE,
            'criteria': CriteriaChoices.UNCONNECTED_LATE_DPD,
            'robot_identifier': '92ee3c2eebbe6c4d3bc3d9110bd448b6',
            'time_to_prepare': '17:50:00',
        },
        # dpd 41 - 70
        {
            'strategy_name': 'unconnected_late_dpd_41-70_evening',
            'time_to_start': '18:00:00',
            'task_type': 'unconnected_late_dpd_41-70_evening',
            'repeat_number': 3, 'called_at': 41, 'called_to': 70,
            'is_active': True, 'dpd_condition': DpdConditionChoices.RANGE,
            'criteria': CriteriaChoices.UNCONNECTED_LATE_DPD,
            'robot_identifier': '92ee3c2eebbe6c4d3bc3d9110bd448b6',
            'robot_name': 'robot_unconnected_late_dpd_41-70',
            'time_to_prepare': '17:50:00',
        },
    ]
    for config in cootek_configs:
        robot = CootekRobot.objects.filter(
            robot_identifier=config['robot_identifier']).first()
        if not robot or config.get('robot_name'):
            robot = CootekRobot.objects.create(
                robot_identifier=config['robot_identifier'],
                robot_name=config['robot_name'],
                is_group_method=True
            )

        CootekConfiguration.objects.create(
            is_active=config.get('is_active', True),
            time_to_start=config['time_to_start'],
            strategy_name=config['strategy_name'],
            task_type=config['task_type'],
            called_at=config['called_at'],
            called_to=config['called_to'],
            number_of_attempts=config['repeat_number'],
            dpd_condition=config['dpd_condition'],
            criteria=config['criteria'],
            cootek_robot=robot,
            time_to_prepare=config['time_to_prepare'],
            exclude_risky_customer=config.get('risky_customer', False),
            from_previous_cootek_result=False,
        )


class Migration(migrations.Migration):
    dependencies = [
    ]

    operations = [
        migrations.RunPython(
            change_experiment_to_active_feature, migrations.RunPython.noop)
    ]
