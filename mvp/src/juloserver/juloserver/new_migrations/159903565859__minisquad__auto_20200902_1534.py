# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-09-02 08:34
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectionHistory',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='collection_history_id', primary_key=True, serialize=False)),
                ('last_current_status', models.BooleanField(default=True)),
                ('excluded_from_bucket', models.BooleanField(default=False)),
                ('is_ptp', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(blank=True, db_column='agent_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('call_result', models.ForeignKey(blank=True, db_column='call_result_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.SkiptraceResultChoice')),
                ('customer', models.ForeignKey(blank=True, db_column='customer_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Customer')),
                ('loan', models.ForeignKey(blank=True, db_column='loan_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Loan')),
                ('payment', models.ForeignKey(blank=True, db_column='payment_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Payment')),
            ],
            options={
                'db_table': 'collection_history',
            },
        ),
        migrations.CreateModel(
            name='CollectionSquad',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='collection_squad_id', primary_key=True, serialize=False)),
                ('squad_name', models.CharField(blank=True, max_length=50, null=True)),
                ('group', models.ForeignKey(blank=True, db_column='group_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='auth.Group')),
            ],
            options={
                'db_table': 'collection_squad',
            },
        ),
        migrations.CreateModel(
            name='CollectionSquadAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('bucket_name', models.CharField(blank=True, max_length=100, null=True)),
                ('agent', models.ForeignKey(blank=True, db_column='agent_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('squad', models.ForeignKey(blank=True, db_column='squad_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='minisquad.CollectionSquad')),
            ],
            options={
                'db_table': 'collection_squad_assignment',
            },
        ),
        migrations.CreateModel(
            name='CommissionLookup',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='commission_lookup_id', primary_key=True, serialize=False)),
                ('payment_amount', models.BigIntegerField(default=0)),
                ('credited_amount', models.BigIntegerField(default=0)),
                ('collected_by', models.TextField()),
                ('agent', models.ForeignKey(blank=True, db_column='agent_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('loan', models.ForeignKey(blank=True, db_column='loan_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Loan')),
                ('payment', models.ForeignKey(blank=True, db_column='payment_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Payment')),
                ('squad', models.ForeignKey(blank=True, db_column='squad_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='minisquad.CollectionSquad')),
            ],
            options={
                'db_table': 'commission_lookup',
            },
        ),
        migrations.CreateModel(
            name='DialerTask',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='dialer_task_id', primary_key=True, serialize=False)),
                ('vendor', models.CharField(default='Intelix', max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('status', models.CharField(default='initiated', max_length=100)),
                ('retry_count', models.IntegerField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dialer_task',
            },
        ),
        migrations.CreateModel(
            name='DialerTaskEvent',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='dialer_task_event_id', primary_key=True, serialize=False)),
                ('data_count', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(default='initiated', max_length=100)),
                ('dialer_task', models.ForeignKey(db_column='dialer_task_id', on_delete=django.db.models.deletion.DO_NOTHING, to='minisquad.DialerTask')),
            ],
            options={
                'db_table': 'dialer_task_event',
            },
        ),
        migrations.CreateModel(
            name='FailedCallResult',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='failed_call_result_id', primary_key=True, serialize=False)),
                ('call_result', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('error', models.TextField()),
                ('dialer_task', models.ForeignKey(db_column='dialer_task_id', on_delete=django.db.models.deletion.DO_NOTHING, to='minisquad.DialerTask')),
            ],
            options={
                'db_table': 'failed_call_result',
            },
        ),
        migrations.CreateModel(
            name='SentToCenterixLog',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='sent_to_centerix_log_id', primary_key=True, serialize=False)),
                ('bucket', models.TextField()),
                ('sorted_by_collection_model', models.NullBooleanField()),
                ('application', models.ForeignKey(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
                ('payment', models.ForeignKey(db_column='payment_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Payment')),
            ],
            options={
                'db_table': 'sent_to_centerix_log',
            },
        ),
        migrations.CreateModel(
            name='SentToDialer',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='sent_to_dialer_id', primary_key=True, serialize=False)),
                ('bucket', models.TextField()),
                ('sorted_by_collection_model', models.NullBooleanField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('dialer_task', models.ForeignKey(db_column='dialer_task_id', on_delete=django.db.models.deletion.DO_NOTHING, to='minisquad.DialerTask')),
                ('loan', models.ForeignKey(db_column='loan_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Loan')),
                ('payment', models.ForeignKey(db_column='payment_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Payment')),
            ],
            options={
                'db_table': 'sent_to_dialer',
            },
        ),
        migrations.CreateModel(
            name='VendorQualityExperiment',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='vendor_quality_experiment_id', primary_key=True, serialize=False)),
                ('bucket', models.TextField()),
                ('experiment_group', models.TextField()),
                ('experiment_setting', models.ForeignKey(db_column='experiment_setting_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.ExperimentSetting')),
                ('loan', models.ForeignKey(db_column='loan_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Loan')),
                ('payment', models.ForeignKey(db_column='payment_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Payment')),
            ],
            options={
                'db_table': 'vendor_quality_experiment',
            },
        ),
        migrations.AddField(
            model_name='collectionhistory',
            name='squad',
            field=models.ForeignKey(blank=True, db_column='squad_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='minisquad.CollectionSquad'),
        ),
    ]
