# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-09-02 08:34
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutoDataCheck',
            fields=[
                ('id', models.BigIntegerField(db_column='data_check_id', primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('check_set', models.CharField(max_length=50)),
                ('data_to_check', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('is_okay', models.BooleanField()),
                ('text_value', models.CharField(blank=True, max_length=150, null=True)),
                ('number_value', models.BigIntegerField(blank=True, null=True)),
                ('latest', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'ana"."auto_data_check',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EtlJob',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.BigIntegerField(db_column='etl_job_id', primary_key=True, serialize=False)),
                ('application_id', models.BigIntegerField()),
                ('customer_id', models.BigIntegerField()),
                ('status', models.CharField(choices=[('initiated', 'ETL job started'), ('auth_failed', 'authentication/login failed'), ('auth_success', 'authentication/login success'), ('failed', 'ETL job failed'), ('done', 'ETL job done')], default='initiated', max_length=50)),
                ('error', models.TextField(blank=True, null=True)),
                ('data_type', models.CharField(choices=[('dsd', 'Device scraped data'), ('gmail', 'Emails from gmail'), ('mandiri', 'Transactions from Mandiri'), ('bca', 'Transactions from BCA'), ('ktp', 'KTP OCR')], max_length=50)),
                ('dsd_id', models.BigIntegerField(blank=True, null=True)),
                ('temp_dir', models.CharField(blank=True, max_length=200, null=True)),
                ('s3_url_raw', models.CharField(blank=True, max_length=200, null=True)),
                ('s3_url_report', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': '"ana"."etl_job"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EtlStatus',
            fields=[
                ('id', models.BigIntegerField(db_column='etl_status_id', primary_key=True, serialize=False)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('started_tasks', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, size=None)),
                ('executed_tasks', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, size=None)),
                ('errors', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('meta_data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
            options={
                'db_table': '"ana"."etl_status"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinfiniStatus',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.BigIntegerField(db_column='finfini_status_id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('vendor_type', models.CharField(max_length=200)),
            ],
            options={
                'db_table': '"ana"."finfini_status"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoanRefinancingScore',
            fields=[
                ('application_id', models.BigIntegerField(db_column='application_id', primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('monthly_income', models.BigIntegerField(default=0)),
                ('total_expense', models.BigIntegerField(default=0)),
                ('total_due_amt', models.BigIntegerField(default=0)),
                ('outstanding_principal', models.BigIntegerField(default=0)),
                ('outstanding_interest', models.BigIntegerField(default=0)),
                ('outstanding_latefee', models.BigIntegerField(default=0)),
                ('rem_installment', models.IntegerField(db_column='rem_installment')),
                ('ability_score', models.FloatField(db_column='ability_score')),
                ('willingness_score', models.FloatField(db_column='willingness_score')),
                ('oldest_payment_num', models.IntegerField(db_column='oldest_payment_num')),
                ('oldest_due_date', models.DateField(blank=True, null=True)),
                ('is_covid_risky', models.NullBooleanField()),
                ('bucket', models.CharField(max_length=254)),
            ],
            options={
                'db_table': '"ana"."loan_refinancing_score"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdAffordabilityModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_affordability_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('model_version', models.CharField(blank=True, max_length=200, null=True)),
                ('predicted_affordability', models.FloatField(db_column='predicted_affordability')),
                ('lookup_affordability', models.FloatField(db_column='lookup_affordability')),
                ('iqr_lower_bound', models.FloatField(db_column='iqr_lower_bound')),
                ('iqr_upper_bound', models.FloatField(db_column='iqr_upper_bound')),
            ],
            options={
                'db_table': '"ana"."pd_affordability_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdBukalapakModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_bukalapak_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.CharField(max_length=200)),
                ('probability_fpd', models.FloatField()),
                ('score', models.CharField(max_length=200)),
            ],
            options={
                'db_table': '"ana"."pd_bukalapak_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdBukalapakUnsupervisedModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_bukalapak_unsupervised_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.CharField(max_length=200)),
                ('cluster', models.FloatField()),
                ('cluster_type', models.CharField(max_length=200)),
            ],
            options={
                'db_table': '"ana"."pd_bukalapak_unsupervised_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdCollectionModelResult',
            fields=[
                ('id', models.AutoField(db_column='pd_collection_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now=True)),
                ('model_version', models.CharField(max_length=10)),
                ('prediction_before_call', models.FloatField(db_column='prediction_before_call')),
                ('prediction_after_call', models.FloatField(db_column='prediction_after_call')),
                ('due_amount', models.BigIntegerField()),
                ('range_from_due_date', models.CharField(max_length=10)),
                ('sort_rank', models.IntegerField()),
            ],
            options={
                'db_table': '"ana"."pd_collection_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdCreditModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_credit_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.PositiveIntegerField()),
                ('probability_fpd', models.FloatField()),
                ('product', models.CharField(blank=True, max_length=20, null=True)),
                ('credit_score_type', models.CharField(blank=True, max_length=200, null=True)),
                ('pgood', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': '"ana"."pd_credit_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdExpensePredictModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_expense_predict_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.PositiveIntegerField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': '"ana"."pd_expense_predict_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdFraudDetection',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.BigIntegerField(db_column='pd_fraud_detection_id', primary_key=True, serialize=False)),
                ('etl_job_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('customer_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('application_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('self_email', models.TextField(blank=True, null=True)),
                ('self_field_name', models.TextField(blank=True, null=True)),
                ('matching_value', models.TextField(blank=True, null=True)),
                ('matched_field_name', models.TextField(blank=True, null=True)),
                ('matched_email', models.TextField(blank=True, null=True)),
                ('matched_appl_id', models.BigIntegerField(blank=True, null=True)),
                ('matched_appl_status_code', models.IntegerField(blank=True, null=True)),
                ('matched_appl_status', models.TextField(blank=True, null=True)),
                ('matched_appl_status_reason', models.TextField(blank=True, null=True)),
                ('matched_appl_udate', models.DateField(blank=True, null=True)),
                ('matched_loan_status', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': '"ana"."pd_fraud_detection"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdFraudModelResult',
            fields=[
                ('id', models.AutoField(db_column='pd_fraud_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('probability_fpd', models.FloatField()),
            ],
            options={
                'db_table': '"ana"."pd_fraud_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdIncomePredictModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_income_predict_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.PositiveIntegerField()),
                ('value', models.FloatField()),
            ],
            options={
                'db_table': '"ana"."pd_income_predict_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdIncomeTrustModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_income_trust_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.PositiveIntegerField()),
                ('value', models.FloatField()),
                ('predicted_income', models.FloatField(blank=True, null=True)),
                ('tier', models.IntegerField(blank=True, null=True)),
                ('mae', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': '"ana"."pd_income_trust_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdIncomeVerification',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.BigIntegerField(db_column='pd_income_verification_id', primary_key=True, serialize=False)),
                ('etl_job_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('customer_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('application_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('estimated_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('yes_no_income', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': '"ana"."pd_income_verification"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdOperationBypassModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_operation_bypass_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.PositiveIntegerField()),
                ('probability_fpd', models.FloatField()),
                ('product', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': '"ana"."pd_operation_bypass_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdPartnerModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_partner_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.PositiveIntegerField()),
                ('probability_fpd', models.FloatField()),
            ],
            options={
                'db_table': '"ana"."pd_partner_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdThinFileModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_thin_file_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.PositiveIntegerField()),
                ('probability_fpd', models.FloatField()),
            ],
            options={
                'db_table': '"ana"."pd_thin_file_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PdWebModelResult',
            fields=[
                ('id', models.BigIntegerField(db_column='pd_web_model_result_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('application_id', models.BigIntegerField(db_index=True)),
                ('customer_id', models.BigIntegerField(db_index=True)),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('probability_fpd', models.FloatField()),
            ],
            options={
                'db_table': '"ana"."pd_web_model_result"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PNBlast',
            fields=[
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField()),
                ('pn_blast_id', models.IntegerField(db_column='pn_blast_id', primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': '"msg"."pn_blast"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PNDelivery',
            fields=[
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField()),
                ('pn_delivery_id', models.IntegerField(db_column='pn_delivery_id', primary_key=True, serialize=False)),
                ('pn_delivery_xid', models.UUIDField()),
                ('fcm_id', models.TextField()),
                ('title', models.TextField()),
                ('body', models.TextField()),
                ('status', models.TextField()),
                ('extra_data', models.BigIntegerField(default=0)),
            ],
            options={
                'db_table': '"msg"."pn_delivery"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PNTracks',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField()),
                ('updated_on', models.DateTimeField()),
                ('application_id', models.BigIntegerField(db_column='application_id')),
                ('loan_status_code', models.IntegerField()),
            ],
            options={
                'db_table': '"msg"."pn_tracks"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SdDeviceApp',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.BigIntegerField(db_column='sd_device_app_id', primary_key=True, serialize=False)),
                ('etl_job_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('customer_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('application_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('app_name', models.TextField(blank=True, null=True)),
                ('app_package_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': '"ana"."sd_device_app"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SdDeviceNavlog',
            fields=[
                ('id', models.BigIntegerField(db_column='sd_device_navlog_id', primary_key=True, serialize=False)),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('etl_job_id', models.BigIntegerField(blank=True, null=True)),
                ('customer_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('application_id', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('app_version', models.TextField()),
                ('android_id', models.TextField()),
                ('gcm_reg_id', models.TextField(blank=True, null=True)),
                ('device_model_name', models.TextField(blank=True, null=True)),
                ('page_id', models.TextField()),
                ('action', models.TextField()),
                ('type', models.TextField(blank=True, null=True)),
                ('nav_log_ts', models.DateTimeField()),
                ('nav_log_dt', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': '"ana"."sd_device_navlog"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublicFile',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='public_file_id', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('file_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'public_file',
            },
        ),
    ]
