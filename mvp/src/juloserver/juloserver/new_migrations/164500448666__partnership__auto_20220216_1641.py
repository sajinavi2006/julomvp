# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2022-02-16 09:41
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import juloserver.julocore.customized_psycopg2.models


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PartnershipApplicationData',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='partnership_application_data_id', primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('is_used_for_registration', models.BooleanField(default=False)),
                ('is_submitted', models.BooleanField(default=False)),
                ('encoded_pin', models.TextField(blank=True, null=True)),
                ('fullname', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('birth_place', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Pria', 'Pria'), ('Wanita', 'Wanita')], max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')], verbose_name='Jenis kelamin')),
                ('mother_maiden_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address_street_num', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('address_provinsi', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('address_kabupaten', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('address_kecamatan', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('address_kelurahan', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('address_kodepos', models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='Kode pos has to be 5 numeric digits', regex='^[0-9]{5}$')])),
                ('home_status', models.CharField(blank=True, choices=[('Mess karyawan', 'Mess karyawan'), ('Kontrak', 'Kontrak'), ('Kos', 'Kos'), ('Milik orang tua', 'Milik orang tua'), ('Milik keluarga', 'Milik keluarga'), ('Milik sendiri, lunas', 'Milik sendiri, lunas'), ('Milik sendiri, mencicil', 'Milik sendiri, mencicil'), ('Lainnya', 'Lainnya')], max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')], verbose_name='Status domisili')),
                ('marital_status', models.CharField(blank=True, choices=[('Lajang', 'Lajang'), ('Menikah', 'Menikah'), ('Cerai', 'Cerai'), ('Janda / duda', 'Janda / duda')], max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')], verbose_name='Status sipil')),
                ('dependent', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Jumlah tanggungan')),
                ('mobile_phone_1', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')])),
                ('mobile_phone_2', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')])),
                ('occupied_since', models.DateField(blank=True, null=True)),
                ('spouse_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('spouse_mobile_phone', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')])),
                ('close_kin_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('close_kin_mobile_phone', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')])),
                ('kin_relationship', models.CharField(blank=True, choices=[('Orang tua', 'Orang tua'), ('Saudara kandung', 'Saudara kandung'), ('Famili lainnya', 'Famili lainnya')], max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')], verbose_name='Hubungan kerabat')),
                ('kin_mobile_phone', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('kin_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('job_type', models.CharField(blank=True, choices=[('Pegawai swasta', 'Pegawai swasta'), ('Pegawai negeri', 'Pegawai negeri'), ('Pengusaha', 'Pengusaha'), ('Freelance', 'Freelance'), ('Pekerja rumah tangga', 'Pekerja rumah tangga'), ('Lainnya', 'Lainnya'), ('Staf rumah tangga', 'Staf rumah tangga'), ('Ibu rumah tangga', 'Ibu rumah tangga'), ('Mahasiswa', 'Mahasiswa'), ('Tidak bekerja', 'Tidak bekerja')], max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')], verbose_name='Tipe pekerjaan')),
                ('job_industry', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('job_description', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('company_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('company_phone_number', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='phone has to be 6 to 15 numeric digits', regex='^\\+?\\d{6,15}$')])),
                ('job_start', models.DateField(blank=True, null=True)),
                ('payday', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(28)])),
                ('last_education', models.CharField(blank=True, choices=[('SD', 'SD'), ('SLTP', 'SLTP'), ('SLTA', 'SLTA'), ('Diploma', 'Diploma'), ('S1', 'S1'), ('S2', 'S2'), ('S3', 'S3')], max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')], verbose_name='Pendidikan terakhir')),
                ('monthly_income', models.BigIntegerField(blank=True, null=True)),
                ('monthly_expenses', models.BigIntegerField(blank=True, null=True)),
                ('monthly_housing_cost', models.BigIntegerField(blank=True, null=True)),
                ('total_current_debt', models.BigIntegerField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=250, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('loan_purpose_description_expanded', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(500)])),
                ('loan_purpose_desc', models.TextField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')])),
                ('is_term_accepted', models.BooleanField(default=False)),
                ('is_verification_agreed', models.BooleanField(default=False)),
                ('address_same_as_ktp', models.NullBooleanField()),
                ('application', juloserver.julocore.customized_psycopg2.models.BigForeignKey(blank=True, db_column='application_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
            ],
            options={
                'db_table': 'partnership_application_data',
            },
        ),
        migrations.CreateModel(
            name='PartnershipCustomerData',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='partnership_customer_data_id', primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=16)),
                ('otp_status', models.CharField(choices=[('UNVERIFIED', 'Unverified Phone Number'), ('VERIFIED', 'Verified Phone Number')], default='UNVERIFIED', max_length=15)),
                ('token', models.TextField(db_index=True)),
                ('nik', models.CharField(blank=True, max_length=16, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='KTP has to be 16 numeric digits', regex='^[0-9]{16}$')])),
                ('customer', juloserver.julocore.customized_psycopg2.models.BigForeignKey(blank=True, db_column='customer_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Customer')),
            ],
            options={
                'db_table': 'partnership_customer_data',
            },
        ),
        migrations.AddField(
            model_name='partnershipapplicationdata',
            name='partnership_customer_data',
            field=models.ForeignKey(db_column='partnership_customer_data_id', on_delete=django.db.models.deletion.DO_NOTHING, to='partnership.PartnershipCustomerData'),
        ),
    ]
