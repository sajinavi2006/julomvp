# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-08-03 04:00
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models

from juloserver.julo.constants import ExperimentConst


def retro_cootek_config(apps, _schema_editor):
    cootekconfiguration = apps.get_model("cootek", "CootekConfiguration")
    cootekrobot = apps.get_model("cootek", "CootekRobot")
    experimentsetting = apps.get_model("julo", "ExperimentSetting")
    experimentsetting.objects.get_or_create(
        is_active=True,
        code=ExperimentConst.COOTEK_REVERSE_EXPERIMENT,
        name=ExperimentConst.COOTEK_REVERSE_EXPERIMENT,
        start_date="2020-08-25 00:00:00+07",
        end_date="2020-09-10 23:59:59+07",
        schedule="",
        action="",
        type="payments",
        criteria="{}"
    )

    cootek_configs = [
        # T0
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T0_L00-L33', 'time_to_start': '08:00:00',
            'task_type': 'JULO_MTL_T0_L00-L33', 'robot': 'cf8a81cbde0bcfa6dbb329eafff477be',
            'repeat_number': 3, 'called_at': 0, 'loan_ids': ['00-33'], 'is_active': False
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T0_L00-L33', 'time_to_start': '10:00:00',
            'task_type': 'JULO_MTL_T0_L00-L33', 'robot': 'cf8a81cbde0bcfa6dbb329eafff477be',
            'repeat_number': 3, 'called_at': 0, 'loan_ids': ['00-33'], 'is_active': False,
            'intention_filter': ['B', 'D', 'E', 'F', 'G', 'H', 'I']
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T0_L34-L66', 'time_to_start': '08:00:00',
            'task_type': 'JULO_MTL_T0_L34-L66', 'robot': 'cf8a81cbde0bcfa6dbb329eafff477be',
            'repeat_number': 3, 'called_at': 0, 'loan_ids': ['34-66'],
            'is_active': False
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T0_L67-L99', 'time_to_start': '08:00:00',
            'task_type': 'JULO_MTL_T0_L67-L99', 'robot': 'cf8a81cbde0bcfa6dbb329eafff477be',
            'repeat_number': 3, 'called_at': 0, 'loan_ids': ['67-99'], 'is_active': False
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T0_L67-L99', 'time_to_start': '10:00:00',
            'task_type': 'JULO_MTL_T0_L67-L99', 'robot': 'cf8a81cbde0bcfa6dbb329eafff477be',
            'repeat_number': 3, 'called_at': 0, 'loan_ids': ['67-99'], 'is_active': False,
            'intention_filter': ['B', 'D', 'E', 'F', 'G', 'H', 'I']
        },
        # T-1
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-1_L00-L66', 'time_to_start': '08:00:00',
            'task_type': 'JULO_MTL_T-1_L00-L66', 'robot': '1ad18323498d8e712beae91369c999ab',
            'repeat_number': 3, 'called_at': -1, 'loan_ids': ['00-66'], 'is_active': False,
            'risky_customer': True
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-1_L00-L66', 'time_to_start': '10:00:00',
            'task_type': 'JULO_MTL_T-1_L00-L66', 'robot': '1ad18323498d8e712beae91369c999ab',
            'repeat_number': 3, 'called_at': -1, 'loan_ids': ['00-66'], 'is_active': False,
            'intention_filter': ['B', 'D', 'F', 'G'], 'risky_customer': True
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-1_L00-L66', 'time_to_start': '12:00:00',
            'task_type': 'JULO_MTL_T-1_L00-L66', 'robot': '1ad18323498d8e712beae91369c999ab',
            'repeat_number': 3, 'called_at': -1, 'loan_ids': ['00-66'], 'is_active': False,
            'intention_filter': ['B', 'D', 'F', 'G'], 'risky_customer': True
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-1_L00-L66', 'time_to_start': '14:00:00',
            'task_type': 'JULO_MTL_T-1_L00-L66', 'robot': '1ad18323498d8e712beae91369c999ab',
            'repeat_number': 2, 'called_at': -1, 'loan_ids': ['00-66'], 'is_active': False,
            'intention_filter': ['E', 'H', 'I'], 'risky_customer': True
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-1_L67-L99', 'time_to_start': '08:00:00',
            'task_type': 'JULO_MTL_T-1_L67-L99', 'robot': '1ad18323498d8e712beae91369c999ab',
            'repeat_number': 3, 'called_at': -1, 'loan_ids': ['67-99'], 'risky_customer': True,
            'is_active': False
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-1_L67-L99', 'time_to_start': '10:00:00',
            'task_type': 'JULO_MTL_T-1_L67-L99', 'robot': '1ad18323498d8e712beae91369c999ab',
            'repeat_number': 3, 'called_at': -1, 'loan_ids': ['67-99'], 'is_active': False,
            'intention_filter': ['B', 'D', 'E', 'F', 'G', 'H', 'I'], 'risky_customer': True
        },
        # T-2
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-2_L00-L66', 'time_to_start': '08:00:00',
            'task_type': 'JULO_MTL_T-2_L00-L66', 'robot': '333ba260b9c5232c5af42dd374893960',
            'repeat_number': 3, 'called_at': -2, 'loan_ids': ['00-66'], 'is_active': False,
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-2_L00-L66', 'time_to_start': '10:00:00',
            'task_type': 'JULO_MTL_T-2_L00-L66', 'robot': '333ba260b9c5232c5af42dd374893960',
            'repeat_number': 3, 'called_at': -2, 'loan_ids': ['00-66'], 'is_active': False,
            'intention_filter': ['B', 'D', 'F', 'G']
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-2_L00-L66', 'time_to_start': '12:00:00',
            'task_type': 'JULO_MTL_T-2_L00-L66', 'robot': '333ba260b9c5232c5af42dd374893960',
            'repeat_number': 3, 'called_at': -2, 'loan_ids': ['00-66'], 'is_active': False,
            'intention_filter': ['B', 'D', 'F', 'G']
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-2_L00-L66', 'time_to_start': '14:00:00',
            'task_type': 'JULO_MTL_T-2_L00-L66', 'robot': '333ba260b9c5232c5af42dd374893960',
            'repeat_number': 2, 'called_at': -2, 'loan_ids': ['00-66'], 'is_active': False,
            'intention_filter': ['E', 'H', 'I']
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-2_L67-L99', 'time_to_start': '08:00:00',
            'task_type': 'JULO_MTL_T-2_L67-L99', 'robot': '333ba260b9c5232c5af42dd374893960',
            'repeat_number': 3, 'called_at': -2, 'loan_ids': ['67-99'], 'is_active': False,
        },
        {
            'strategy_name': 'EXPERIMENT_JULO_MTL_T-2_L67-L99', 'time_to_start': '10:00:00',
            'task_type': 'JULO_MTL_T-2_L67-L99', 'robot': '333ba260b9c5232c5af42dd374893960',
            'repeat_number': 3, 'called_at': -2, 'loan_ids': ['67-99'], 'is_active': False,
            'intention_filter': ['B', 'D', 'E', 'F', 'G', 'H', 'I']
        },
    ]

    for config in cootek_configs:
        robot = cootekrobot.objects.filter(robot_identifier=config['robot']).first()
        if robot:
            cootekconfiguration.objects.create(
                is_active=config.get('is_active', True),
                time_to_start=config['time_to_start'],
                strategy_name=config['strategy_name'],
                task_type=config['task_type'],
                called_at=config['called_at'],
                number_of_attempts=config['repeat_number'],
                tag_status=config.get('intention_filter'),
                cootek_robot=robot,
                product='mtl',
                loan_ids=config['loan_ids'],
                exclude_risky_customer=config.get('risky_customer', False)
            )


class Migration(migrations.Migration):

    dependencies = [
        ('cootek', '0009_cootekconfiguration_exclude_risky_customer'),
    ]

    operations = [
        migrations.AddField(
            model_name='cootekconfiguration',
            name='loan_ids',
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=100),
                blank=True, default=None, null=True, size=None),
        ),
        migrations.AddField(
            model_name='cootekconfiguration',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.RunPython(retro_cootek_config, migrations.RunPython.noop)
    ]
