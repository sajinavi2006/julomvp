# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2018-04-06 13:53
from __future__ import unicode_literals

from django.db import migrations, models
from ...portal.object.product_profile.services import generate_product_name

GRAB_FOOD_PRODUCTS = [{
    'code': 70,
    'name': 'GRABF1',
    'min_amount': 2000000,
    'max_amount': 5000000,
    'min_duration': 4,
    'max_duration': 6,
    'min_interest_rate': 0.032,
    'max_interest_rate': 0.08,
    'interest_rate_increment': 0.00,
    'min_origination_fee': 0.05,
    'max_origination_fee': 0.05,
    'origination_fee_increment': 0.00,
    'cashback_initial': 0.00,
    'cashback_payment': 0.00,
    'late_fee': 0.00,
    'payment_frequency': 'Weekly',
    'debt_income_ratio': None,
    'is_initial': True,
    'is_product_exclusive': True,
    'is_active': True
},
    {'code': 71,
     'name': 'GRABF2',
     'min_amount': 2000000,
     'max_amount': 5000000,
     'min_duration': 4,
     'max_duration': 6,
     'min_interest_rate': 0.032,
     'max_interest_rate': 0.08,
     'interest_rate_increment': 0.00,
     'min_origination_fee': 0.05,
     'max_origination_fee': 0.05,
     'origination_fee_increment': 0.00,
     'cashback_initial': 0.00,
     'cashback_payment': 0.00,
     'late_fee': 0.00,
     'payment_frequency': 'Weekly',
     'debt_income_ratio': None,
     'is_initial': False,
     'is_product_exclusive': True,
     'is_active': True}
]

GRAB_FOOD_CUSTOMER = {'credit_score': ['A-', 'B+', 'B-'], 'min_age': 21}


def load_loc_product(apps, schema_editor):
    for GRAB_FOOD_PRODUCT in GRAB_FOOD_PRODUCTS:
        ProductLine = apps.get_model("julo", "ProductLine")
        ProductLookup = apps.get_model("julo", "ProductLookup")
        ProductProfile = apps.get_model("julo", "ProductProfile")
        ProductCustomerCriteria = apps.get_model("julo", "ProductCustomerCriteria")

        product_profile = ProductProfile(**GRAB_FOOD_PRODUCT)
        product_profile.save()

        # loc customer criteria
        GRAB_FOOD_CUSTOMER['product_profile'] = product_profile
        product_customer_criteria = ProductCustomerCriteria(**GRAB_FOOD_CUSTOMER)
        product_customer_criteria.save()

        # loc product_line
        product_line = ProductLine.objects.create(
            product_line_code=product_profile.code,
            product_line_type=product_profile.name,
            min_amount=product_profile.min_amount,
            max_amount=product_profile.max_amount,
            min_duration=product_profile.min_duration,
            max_duration=product_profile.max_duration,
            min_interest_rate=product_profile.min_interest_rate,
            max_interest_rate=product_profile.max_interest_rate,
            payment_frequency=product_profile.payment_frequency,
            product_profile=product_profile
        )

        # product lookup
        #product_lookup_list = generate_product_lookup(product_profile, product_line)
        product_lookup_list = [{'amount':2000000, 'duration':4, 'rate':0.004},
                               {'amount': 2000000, 'duration': 6, 'rate': 0.008},
                               {'amount': 5000000, 'duration': 4, 'rate': 0.0032},
                               {'amount': 5000000, 'duration': 6, 'rate': 0.0062}]
        for product_lookup_data in product_lookup_list:
            product_lookup = {}
            product_name = generate_product_name(product_lookup_data['rate'], 0.05, product_profile.late_fee,
                                                 product_profile.cashback_initial, product_profile.cashback_payment,
                                                 product_profile.payment_frequency)

            product_lookup['interest_rate'] = product_lookup_data['rate']
            product_lookup['origination_fee_pct'] = 0.05
            product_lookup['product_name'] = product_name
            product_lookup['late_fee_pct'] = product_profile.late_fee
            product_lookup['cashback_initial_pct'] = product_profile.cashback_initial
            product_lookup['cashback_payment_pct'] = product_profile.cashback_payment
            product_lookup['is_active'] = True
            product_lookup['product_line'] = product_line
            product_lookup['product_profile'] = product_profile
            product_lookup['eligible_amount'] = product_lookup_data['amount']
            product_lookup['eligible_duration'] = product_lookup_data['duration']
            product_lookup_obj = ProductLookup(**product_lookup)
            product_lookup_obj.save()


class Migration(migrations.Migration):
    dependencies = [
        ('julo', '0233_sepulsatransaction_line_of_credit_transaction'),
    ]

    operations = [
        migrations.RunPython(load_loc_product, migrations.RunPython.noop),
    ]
