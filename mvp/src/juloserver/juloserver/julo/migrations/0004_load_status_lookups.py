# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-24 01:19
from __future__ import unicode_literals

from django.db import migrations


def load_status_lookups(apps, schema_editor):
    status_lookups = [

        # Application status

        (110, 'Form submitted'),
        (120, 'Documents submitted'),
        (130, 'Application verified'),
        (131, 'Application re-submission requested'),
        (132, 'Application re-submitted'),
        (133, 'Application flagged for fraud'),
        (134, 'Application flagged for supervisor'),
        (135, 'Application denied'),
        (140, 'Offer made to customer'),
        (141, 'Offer accepted by customer'),
        (142, 'Offer declined by customer'),
        (143, 'Offer expired'),
        (150, 'Verification calls successful'),
        (151, 'Verification calls ongoing'),
        (152, 'Verification calls failed'),
        (160, 'Activation call successful'),
        (161, 'Activation call failed'),
        (170, 'Legal agreement signed'),
        (171, 'Legal agreement expired'),
        (180, 'Fund disbursal successful'),
        (181, 'Fund disbursal failed'),

        # Loan status

        (210, 'Inactive'),
        (220, 'Current'),
        (230, '1dpd'),
        (231, '5dpd'),
        (232, '30dpd'),
        (233, '60dpd'),
        (234, '90dpd'),
        (235, '120dpd'),
        (236, '150dpd'),
        (237, '180dpd'),
        (240, 'Re-negotiated'),
        (250, 'Paid off'),

        # Payment status

        (310, 'Payment not due'),
        (311, 'Payment due in 3 days'),
        (312, 'Payment due today'),
        (320, '1dpd'),
        (321, '5dpd'),
        (322, '30dpd'),
        (323, '60dpd'),
        (324, '90dpd'),
        (325, '120dpd'),
        (326, '150dpd'),
        (327, '180dpd'),
        (330, 'Paid on time'),
        (331, 'Paid within grace period'),
        (332, 'Paid late'),

    ]

    StatusLookup = apps.get_model("julo", "StatusLookup")
    for status_code, status in status_lookups:
        status_lookup = StatusLookup(status_code=status_code, status=status)
        status_lookup.save()


class Migration(migrations.Migration):

    dependencies = [
        ('julo', '0003_alter_id_column'),
    ]

    operations = [
        migrations.RunPython(load_status_lookups),
    ]
