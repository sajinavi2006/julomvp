# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-03-15 06:33
from __future__ import unicode_literals

import logging

from django.db import connection
from django.db import migrations
from django.db import transaction

from loan_app.statuses import Checker


logger = logging.getLogger(__name__)


def update_application_datacheck(apps, schema_editor):
    """
    This migration is to mapping datacheck with application field
    for automation and edit field
    """

    ApplicationDataCheck = apps.get_model("julo", "ApplicationDataCheck")
    ApplicationField = apps.get_model("julo", "ApplicationField")

    data_checks = Checker

    with transaction.atomic():
        for check_item in data_checks:
            data_checks_arg = check_item.__dict__.copy()
            logger.info({
                'ApplicationDataCheck': 'update automation and app_field',
                'sequence': data_checks_arg['sequence'],
            })

            # update automation
            application_history_list = ApplicationDataCheck.objects.filter(
                sequence=data_checks_arg['sequence']).update(
                    automation=data_checks_arg['automation']
                )

            if data_checks_arg['app_field_id'] is not None and data_checks_arg['app_field_id']!='':
                # update application_field
                application_history_list = ApplicationDataCheck.objects.filter(
                    sequence=data_checks_arg['sequence']).update(application_field=ApplicationField.objects.get(
                        pk=data_checks_arg['app_field_id']),
                        automation=data_checks_arg['automation']
                    )


class Migration(migrations.Migration):

    dependencies = [
        ('julo', '0072_application_field_mapping'),
    ]

    operations = [
        migrations.RunPython(
            update_application_datacheck
        ),
    ]
