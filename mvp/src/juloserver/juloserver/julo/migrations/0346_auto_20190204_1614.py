# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2019-02-04 09:14
from __future__ import unicode_literals

import ckeditor.fields
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import juloserver.julo.models


class Migration(migrations.Migration):

    dependencies = [
        ('julo', '0346_auto_20190124_1405'),
    ]

    operations = [
        migrations.CreateModel(
            name='FaqItem',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='faq_item_id', primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=250)),
                ('link_url', models.URLField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rich_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=250, null=True)),
                ('order_priority', models.IntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('order_priority', 'visible'),
                'db_table': 'faq_item',
            },
            bases=(juloserver.julo.models.GetInstanceMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FaqSection',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='faq_section_id', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('order_priority', models.IntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('order_priority', 'visible'),
                'db_table': 'faq_section',
            },
        ),
        migrations.CreateModel(
            name='FaqSubTitle',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='faq_subtitle_id', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('link_url', models.URLField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rich_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('order_priority', models.IntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
                ('faq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_titles', to='julo.FaqItem')),
            ],
            options={
                'ordering': ('order_priority', 'visible'),
                'db_table': 'faq_subtitle',
            },
        ),
        migrations.CreateModel(
            name='JuloContactDetails',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='julo_contact_details_id', primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('link_url', models.URLField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('show_image', models.BooleanField(default=True)),
                ('description', models.TextField()),
                ('rich_text', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('chat_availability', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('email_ids', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, null=True, size=None)),
                ('phone_numbers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$')]), blank=True, null=True, size=None)),
                ('contact_us_text', models.CharField(blank=True, max_length=250, null=True)),
                ('order_priority', models.IntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faq_contact', to='julo.FaqSection')),
            ],
            options={
                'db_table': 'julo_contact_details',
            },
        ),
        migrations.AlterField(
            model_name='application',
            name='address_kodepos',
            field=models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='Kode pos has to be 5 numeric digits', regex='^[0-9]{5}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='close_kin_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='company_phone_number',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='kin_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='landlord_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='mobile_phone_1',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='mobile_phone_2',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='new_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='spouse_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='application',
            name='work_kodepos',
            field=models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='Kode pos has to be 5 numeric digits', regex='^[0-9]{5}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='address_kodepos',
            field=models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='Kode pos has to be 5 numeric digits', regex='^[0-9]{5}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='close_kin_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='company_phone_number',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='kin_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='landlord_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='mobile_phone_1',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='mobile_phone_2',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='new_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='spouse_mobile_phone',
            field=models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='mobile phone has to be 10 to 15 numeric digits', regex='^\\+?\\d{10,15}$')]),
        ),
        migrations.AlterField(
            model_name='applicationoriginal',
            name='work_kodepos',
            field=models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='characters not allowed', regex='^[ -~]+$'), django.core.validators.RegexValidator(message='Kode pos has to be 5 numeric digits', regex='^[0-9]{5}$')]),
        ),
        migrations.AddField(
            model_name='faqitem',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faq_items', to='julo.FaqSection'),
        ),
    ]
