# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2020-01-30 07:17
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import juloserver.julo.models

from juloserver.julo.constants import FeatureNameConst


def expire_experiment_setting(apps, _schema_editor):
    ExperimentSetting = apps.get_model("julo", "ExperimentSetting")
    ExperimentSetting.objects.filter(
        code="ParallelHighScoreBypassExperiments"
    ).update(
        code="ParallelHighScoreBypassExperiments (Obsolete)",
        name="Parallel High Score Bypass Experiments (Obsolete)",
        is_active=False,
        is_permanent=False,
    )

def add_experiment_setting(apps, _schema_editor):
    FeatureSetting = apps.get_model("julo", "FeatureSetting")
    FeatureSetting.objects.get_or_create(
        is_active=True,
        feature_name=FeatureNameConst.HIGH_SCORE_FULL_BYPASS,
        description="Configuration For High Score Full Bypass",
    )

def seeder_high_score_full_bypass(apps, _schema_editor):
    HighScoreFullBypass = apps.get_model("julo", "HighScoreFullBypass")
    customer_categories = ('julo', 'julo_repeat', 'webapp')
    salaried_types = (True, False)
    premium_area_types = (True, False)

    entries = []
    for customer_category in customer_categories:
        for salaried_type in salaried_types:
            for premium_area_type in premium_area_types:
                entry = HighScoreFullBypass(
                    cm_version=29,
                    threshold=0.92,
                    is_premium_area=premium_area_type,
                    is_salaried=salaried_type,
                    customer_category=customer_category,
                )
                entries.append(entry)
    HighScoreFullBypass.objects.bulk_create(entries)


class Migration(migrations.Migration):

    dependencies = [
        ('julo', '0610_add_application_install_history'),
    ]

    operations = [
        migrations.CreateModel(
            name='HighScoreFullBypass',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='high_score_full_bypass_id', primary_key=True, serialize=False)),
                ('cm_version', models.CharField(default=None, max_length=200, null=True)),
                ('threshold', models.FloatField()),
                ('is_premium_area', models.BooleanField(default=True)),
                ('is_salaried', models.BooleanField(default=True)),
                ('customer_category', models.CharField(choices=[(b'julo', b'julo'), (b'julo_repeat', b'julo_repeat'), (b'webapp', b'webapp')], max_length=50)),
            ],
            options={
                'db_table': 'high_score_full_bypass',
            },
        ),
        migrations.AddField(
            model_name='creditscore',
            name='model_version',
            field=models.CharField(default=None, max_length=200, null=True),
        ),
        migrations.RunPython(expire_experiment_setting, migrations.RunPython.noop),
        migrations.RunPython(add_experiment_setting, migrations.RunPython.noop),
        migrations.RunPython(seeder_high_score_full_bypass, migrations.RunPython.noop),
    ]
