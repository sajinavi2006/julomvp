# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-11-09 07:57
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import juloserver.julo.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressGeolocation',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='address_geolocation_id', primary_key=True, serialize=False)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
            options={
                'db_table': 'address_geolocation',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='application_id', primary_key=True, serialize=False)),
                ('loan_amount_request', models.BigIntegerField()),
                ('loan_duration_request', models.IntegerField()),
                ('loan_purpose', models.CharField(choices=[('Biaya pendidikan', 'Biaya pendidikan'), ('Biaya kesehatan', 'Biaya kesehatan'), ('Kebutuhan sehari-hari', 'Kebutuhan sehari-hari'), ('Modal usaha', 'Modal usaha'), ('Biaya liburan / umroh', 'Biaya liburan / umroh'), ('Membeli kendaraan', 'Membeli kendaraan'), ('Membeli komputer', 'Membeli komputer'), ('Lainnya', 'Lainnya')], max_length=100, verbose_name='Tujuan pinjaman')),
                ('marketing_source', models.CharField(choices=[('Teman / saudara', 'Teman / saudara'), ('Facebook', 'Facebook'), ('Artikel online', 'Artikel online'), ('Iklan online', 'Iklan online'), ('Televisi', 'Televisi'), ('Radio', 'Radio'), ('Billboard / spanduk', 'Billboard / spanduk'), ('Lainnya', 'Lainnya')], max_length=100, verbose_name='Dari mana tahu')),
                ('referral_code', models.CharField(blank=True, max_length=20)),
                ('is_own_phone', models.BooleanField()),
                ('fullname', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('gender', models.CharField(choices=[('Pria', 'Pria'), ('Wanita', 'Wanita')], max_length=10, verbose_name='Jenis kelamin')),
                ('ktp', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='KTP has to be 16 numeric digits', regex='^[0-9]{16}$')])),
                ('address_street_num', models.CharField(max_length=100)),
                ('address_provinsi', models.CharField(max_length=100)),
                ('address_kabupaten', models.CharField(max_length=100)),
                ('address_kecamatan', models.CharField(max_length=100)),
                ('address_kelurahan', models.CharField(max_length=100)),
                ('address_kodepos', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Kode pos has to be 5 numeric digits', regex='^[0-9]{5}$')])),
                ('occupied_since', models.DateField()),
                ('home_status', models.CharField(choices=[('Kontrak', 'Kontrak'), ('Kos', 'Kos'), ('Rumah orang tua', 'Rumah orang tua'), ('Rumah sendiri, lunas', 'Rumah sendiri, lunas'), ('Rumah sendiri, mencicil', 'Rumah sendiri, mencicil'), ('Lainnya', 'Lainnya')], max_length=50, verbose_name='Status domisili')),
                ('landlord_mobile_phone', models.CharField(blank=True, max_length=50)),
                ('mobile_phone_1', models.CharField(max_length=50)),
                ('has_whatsapp_1', models.NullBooleanField()),
                ('mobile_phone_2', models.CharField(blank=True, max_length=50, null=True)),
                ('has_whatsapp_2', models.NullBooleanField()),
                ('email', models.EmailField(max_length=254)),
                ('bbm_pin', models.CharField(blank=True, max_length=50, null=True)),
                ('marital_status', models.CharField(choices=[('Lajang', 'Lajang'), ('Menikah', 'Menikah'), ('Cerai', 'Cerai'), ('Janda / duda', 'Janda / duda')], max_length=50, verbose_name='Status sipil')),
                ('dependent', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Jumlah tanggungan')),
                ('spouse_name', models.CharField(blank=True, max_length=100, null=True)),
                ('spouse_dob', models.DateField(blank=True, null=True)),
                ('spouse_mobile_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('spouse_has_whatsapp', models.NullBooleanField()),
                ('kin_name', models.CharField(max_length=100)),
                ('kin_dob', models.DateField()),
                ('kin_gender', models.CharField(choices=[('Pria', 'Pria'), ('Wanita', 'Wanita')], max_length=10, verbose_name='Jenis kelamin kerabat')),
                ('kin_mobile_phone', models.CharField(max_length=50)),
                ('kin_relationship', models.CharField(choices=[('Orang tua', 'Orang tua'), ('Saudara kandung', 'Saudara kandung'), ('Famili lainnya', 'Famili lainnya')], max_length=50, verbose_name='Hubungan kerabat')),
                ('job_type', models.CharField(choices=[('Pegawai swasta', 'Pegawai swasta'), ('Pegawai negeri', 'Pegawai negeri'), ('Pengusaha', 'Pengusaha'), ('Freelance', 'Freelance'), ('Pekerja rumah tangga', 'Pekerja rumah tangga'), ('Lainnya', 'Lainnya')], max_length=50, verbose_name='Tipe pekerjaan')),
                ('job_description', models.CharField(blank=True, max_length=100, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('company_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('job_start', models.DateField()),
                ('monthly_income', models.BigIntegerField()),
                ('income_1', models.BigIntegerField(blank=True, null=True)),
                ('income_2', models.BigIntegerField(blank=True, null=True)),
                ('income_3', models.BigIntegerField(blank=True, null=True)),
                ('last_education', models.CharField(choices=[('SD', 'SD'), ('SLTP', 'SLTP'), ('SLTA', 'SLTA'), ('Diploma', 'Diploma'), ('S1', 'S1'), ('S2', 'S2'), ('S3', 'S3')], max_length=50, verbose_name='Pendidikan terakhir')),
                ('graduation_year', models.IntegerField()),
                ('gpa', models.FloatField(blank=True, null=True)),
                ('has_other_income', models.BooleanField(default=False)),
                ('other_income_amount', models.BigIntegerField(blank=True, null=True)),
                ('other_income_source', models.CharField(blank=True, max_length=50, null=True)),
                ('monthly_housing_cost', models.BigIntegerField()),
                ('monthly_expenses', models.BigIntegerField()),
                ('total_current_debt', models.BigIntegerField()),
                ('vehicle_type_1', models.CharField(choices=[('Sepeda motor', 'Sepeda motor'), ('Mobil', 'Mobil'), ('Lainnya', 'Lainnya'), ('Tidak punya', 'Tidak punya')], max_length=50, verbose_name='Kendaraan pribadi 1')),
                ('vehicle_ownership_1', models.CharField(blank=True, choices=[('Lunas', 'Lunas'), ('Mencicil', 'Mencicil'), ('Diagunkan', 'Diagunkan'), ('Lainnya', 'Lainnya')], max_length=50, null=True, verbose_name='Kepemilikan 1')),
                ('vehicle_type_2', models.CharField(choices=[('Sepeda motor', 'Sepeda motor'), ('Mobil', 'Mobil'), ('Lainnya', 'Lainnya'), ('Tidak punya', 'Tidak punya')], max_length=50, verbose_name='Kendaraan pribadi 2')),
                ('vehicle_ownership_2', models.CharField(blank=True, choices=[('Lunas', 'Lunas'), ('Mencicil', 'Mencicil'), ('Diagunkan', 'Diagunkan'), ('Lainnya', 'Lainnya')], max_length=50, null=True, verbose_name='Kepemilikan 2')),
                ('bank_name', models.CharField(max_length=250)),
                ('bank_branch', models.CharField(max_length=100)),
                ('bank_account_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Bank account number has to be numeric digits', regex='^[0-9]+$')])),
                ('is_term_accepted', models.BooleanField(default=False)),
                ('is_verification_agreed', models.BooleanField(default=False)),
                ('is_document_submitted', models.NullBooleanField()),
                ('is_sphp_signed', models.NullBooleanField()),
                ('sphp_exp_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='customer_id', primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_email_verified', models.NullBooleanField()),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('is_phone_verified', models.NullBooleanField()),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('self_referral_code', models.CharField(blank=True, max_length=20, null=True)),
                ('email_verification_key', models.CharField(blank=True, max_length=50, null=True)),
                ('email_key_exp_date', models.DateTimeField(blank=True, null=True)),
                ('reset_password_key', models.CharField(blank=True, max_length=50, null=True)),
                ('reset_password_exp_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(db_column='auth_user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='DataCheck',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='data_check_id', primary_key=True, serialize=False)),
                ('responsibility', models.CharField(max_length=100)),
                ('data_to_check', models.CharField(max_length=100)),
                ('is_okay', models.NullBooleanField()),
                ('application', models.ForeignKey(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
            ],
            options={
                'db_table': 'data_check',
            },
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='decision_id', primary_key=True, serialize=False)),
                ('is_non_fraud', models.NullBooleanField()),
                ('is_able_to_pay', models.NullBooleanField()),
                ('is_willing_to_pay', models.NullBooleanField()),
                ('is_approved', models.NullBooleanField()),
                ('interest_rate', models.FloatField(blank=True, null=True)),
                ('origination_fee_pct', models.FloatField(blank=True, null=True)),
                ('late_fee_pct', models.FloatField(blank=True, null=True)),
                ('cashback_initial_pct', models.FloatField(blank=True, null=True)),
                ('cashback_payment_pct', models.FloatField(blank=True, null=True)),
                ('monthly_saving', models.BigIntegerField(blank=True, null=True)),
                ('saving_confidence_pct', models.FloatField(blank=True, null=True)),
                ('max_monthly_pmt', models.BigIntegerField(blank=True, null=True)),
                ('application', models.ForeignKey(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
            ],
            options={
                'db_table': 'decision',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='device_id', primary_key=True, serialize=False)),
                ('gcm_reg_id', models.CharField(max_length=200)),
                ('android_id', models.CharField(blank=True, max_length=50)),
                ('imei', models.CharField(blank=True, max_length=50)),
                ('customer', models.ForeignKey(db_column='customer_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Customer')),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='DeviceScrapedData',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='device_scraped_data_id', primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=50)),
                ('application', models.ForeignKey(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
            ],
            options={
                'db_table': 'device_scraped_data',
            },
        ),
        migrations.CreateModel(
            name='FacebookData',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='facebook_data_id', primary_key=True, serialize=False)),
                ('facebook_id', models.BigIntegerField()),
                ('fullname', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('friend_count', models.IntegerField(blank=True, null=True)),
                ('open_date', models.DateField(blank=True, null=True)),
                ('customer', models.OneToOneField(db_column='customer_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Customer')),
            ],
            options={
                'db_table': 'facebook_data',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='image_id', primary_key=True, serialize=False)),
                ('image_source', models.BigIntegerField(db_column='image_source_id')),
                ('image_type', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, db_column='internal_path', null=True, upload_to=juloserver.julo.models.upload_to)),
            ],
            options={
                'db_table': 'image',
            },
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='loan_id', primary_key=True, serialize=False)),
                ('loan_amount', models.BigIntegerField()),
                ('loan_duration', models.IntegerField()),
                ('installment_amount', models.BigIntegerField()),
                ('cashback_earned_total', models.BigIntegerField(null=True)),
                ('fund_transfer_ts', models.DateTimeField(blank=True, null=True)),
                ('julo_bank_name', models.CharField(blank=True, max_length=250)),
                ('julo_bank_branch', models.CharField(blank=True, max_length=100)),
                ('julo_bank_account_number', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message='Bank account number has to be numeric digits', regex='^[0-9]+$')])),
                ('cycle_day', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(28)])),
                ('cycle_day_change_date', models.DateField(blank=True, null=True)),
                ('cycle_day_requested', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(28)])),
                ('application', models.OneToOneField(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
                ('customer', models.ForeignKey(db_column='customer_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Customer')),
            ],
            options={
                'db_table': 'loan',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='note_id', primary_key=True, serialize=False)),
                ('note_text', models.TextField(db_column='NOTE_TEXT')),
                ('application', models.OneToOneField(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
            ],
            options={
                'db_table': 'note',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='offer_id', primary_key=True, serialize=False)),
                ('offer_number', models.IntegerField()),
                ('loan_amount_offer', models.BigIntegerField()),
                ('loan_duration_offer', models.IntegerField()),
                ('installment_amount_offer', models.BigIntegerField()),
                ('is_accepted', models.NullBooleanField()),
                ('offer_accepted_ts', models.DateTimeField(blank=True, null=True)),
                ('offer_exp_date', models.DateField(blank=True, null=True)),
                ('application', models.ForeignKey(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application')),
                ('decision', models.ForeignKey(db_column='decision_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Decision')),
            ],
            options={
                'db_table': 'offer',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='payment_id', primary_key=True, serialize=False)),
                ('payment_number', models.IntegerField()),
                ('due_date', models.DateField(null=True)),
                ('due_amount', models.BigIntegerField()),
                ('late_fee_amount', models.BigIntegerField(blank=True, null=True)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('paid_amount', models.BigIntegerField(blank=True, null=True)),
                ('cashback_earned', models.BigIntegerField(blank=True, null=True)),
                ('loan', models.ForeignKey(db_column='loan_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Loan')),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='ProductLookup',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('product_code', models.BigIntegerField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=100)),
                ('interest_rate', models.FloatField()),
                ('origination_fee_pct', models.FloatField()),
                ('late_fee_pct', models.FloatField()),
                ('cashback_initial_pct', models.FloatField()),
                ('cashback_payment_pct', models.FloatField()),
                ('payment_frequency', models.CharField(max_length=50)),
                ('is_active', models.BooleanField()),
            ],
            options={
                'db_table': 'product_lookup',
            },
        ),
        migrations.CreateModel(
            name='StatusLookup',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('status_code', models.IntegerField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'status_lookup',
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyData',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='third_party_data_id', primary_key=True, serialize=False)),
                ('lenddo', models.CharField(blank=True, max_length=50, null=True)),
                ('emailage', models.CharField(blank=True, max_length=50, null=True)),
                ('trulioo', models.CharField(blank=True, max_length=50, null=True)),
                ('trustev', models.CharField(blank=True, max_length=50, null=True)),
                ('creditcheck', models.CharField(blank=True, max_length=50, null=True)),
                ('efl', models.CharField(blank=True, max_length=50, null=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='third_party_data', to='julo.Application')),
            ],
            options={
                'db_table': 'third_party_data',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(db_column='transaction_id', primary_key=True, serialize=False)),
                ('julo_bank_name', models.CharField(blank=True, max_length=250)),
                ('julo_bank_branch', models.CharField(blank=True, max_length=100)),
                ('julo_bank_account_number', models.CharField(blank=True, max_length=50, validators=[django.core.validators.RegexValidator(message='Bank account number has to be numeric digits', regex='^[0-9]+$')])),
                ('transaction_ts', models.DateTimeField()),
                ('transaction_type', models.CharField(max_length=50)),
                ('transaction_amount', models.BigIntegerField()),
                ('transaction_note', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_status',
            field=models.ForeignKey(db_column='payment_status_code', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.StatusLookup'),
        ),
        migrations.AddField(
            model_name='offer',
            name='product',
            field=models.ForeignKey(db_column='product_code', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.ProductLookup'),
        ),
        migrations.AddField(
            model_name='loan',
            name='loan_status',
            field=models.ForeignKey(db_column='loan_status_code', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.StatusLookup'),
        ),
        migrations.AddField(
            model_name='loan',
            name='offer',
            field=models.ForeignKey(db_column='offer_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Offer'),
        ),
        migrations.AddField(
            model_name='loan',
            name='product',
            field=models.ForeignKey(db_column='product_code', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.ProductLookup'),
        ),
        migrations.AddField(
            model_name='application',
            name='application_status',
            field=models.ForeignKey(db_column='application_status_code', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.StatusLookup'),
        ),
        migrations.AddField(
            model_name='application',
            name='customer',
            field=models.ForeignKey(db_column='customer_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Customer'),
        ),
        migrations.AddField(
            model_name='application',
            name='device',
            field=models.ForeignKey(db_column='device_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Device'),
        ),
        migrations.AddField(
            model_name='addressgeolocation',
            name='application',
            field=models.OneToOneField(db_column='application_id', on_delete=django.db.models.deletion.DO_NOTHING, to='julo.Application'),
        ),
    ]
